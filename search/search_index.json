{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u53ef\u4ee5\u53c2\u8003\u7684\u6587\u6863","text":"<p>mkdocs\u7684\u5b98\u65b9\u6587\u6863.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"Llama/","title":"Llama","text":"<p>\u8fd9\u662f\u57fa\u4e8eLlama.cpp\u7684\u7b97\u5b50\u52a0\u901f\u9879\u76ee</p>"},{"location":"Llama/2410.03613/","title":"Large_Language_Model_Performance_Benchmarching_on_Mobile_Platforms","text":""},{"location":"Llama/2410.03613/#_1","title":"\u5927\u6a21\u578b\u5728\u79fb\u52a8\u5e73\u53f0\u4e0a\u7684\u6027\u80fd\u8bc4\u6d4b","text":""},{"location":"Llama/2410.03613/#_2","title":"\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8bbe\u7f6e\u7ebf\u7a0b\u6570\u7b49\u4e8e\u5927\u6838\u7684\u6570\u91cf\u53ef\u4ee5\u8fbe\u5230\u6700\u4f73\u6027\u80fd","text":""},{"location":"Llama/2410.03613/#smmlasdotllm","title":"\u4e13\u7528\u673a\u5668\u6307\u4ee4\uff0c\u5982smmla,sdot\u663e\u8457\u63d0\u9ad8LLM\u6027\u80fd","text":""},{"location":"Llama/llama.cpp%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/","title":"Llama.cpp\u6e90\u7801\u89e3\u8bfb","text":"<p>\u8fd9\u91cc\u8bb0\u5f55\u4e86\u5bf9\u4e8ellama.cpp\u7684\u6e90\u7801\u89e3\u8bfb\uff0c\u901a\u8fc7debug\u4ee5\u53ca\u706b\u7130\u56fe\u5b8c\u6210\uff0c\u4e3b\u8981\u662f\u4f18\u5316\u8fc7\u7a0b\uff0c\u5e76\u975e\u5b8c\u6574\u7684\u67b6\u6784\u89e3\u8bfb\u3002</p> <p>\u4ee3\u7801\u7684\u7248\u672c\u662fb4837\uff0cllama.cpp\u7684\u7248\u672c\u53f7\u66f4\u65b0\u901f\u5ea6\u6bd4\u8f83\u5feb\uff0c\u5e0c\u671b\u5176\u63a8\u7406\u6846\u67b6\u7684\u57fa\u672c\u539f\u5219\u4e0d\u53d8\u5427</p>"},{"location":"Llama/llama.cpp%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/#main","title":"\u8fdb\u5165main\u51fd\u6570","text":"<p><pre><code>            for (int i = 0; i &lt; (int) embd.size(); i += params.n_batch) {\n                int n_eval = (int) embd.size() - i;\n                if (n_eval &gt; params.n_batch) {\n                    n_eval = params.n_batch;\n                }\n\n                LOG_DBG(\"eval: %s\\n\", string_from(ctx, embd).c_str());\n\n                if (llama_decode(ctx, llama_batch_get_one(&amp;embd[i], n_eval))) {\n                    LOG_ERR(\"%s : failed to eval\\n\", __func__);\n                    return 1;\n                }\n\n                n_past += n_eval;\n\n                LOG_DBG(\"n_past = %d\\n\", n_past);\n                // Display total tokens alongside total time\n                if (params.n_print &gt; 0 &amp;&amp; n_past % params.n_print == 0) {\n                    LOG_DBG(\"\\n\\033[31mTokens consumed so far = %d / %d \\033[0m\\n\", n_past, n_ctx);\n                }\n            }\n</code></pre> \u6a21\u578b\u8f93\u5165 Token \u5e76\u6267\u884c\u9884\u6d4b\uff1a \u6bcf\u6b21\u6700\u591a\u5904\u7406 params.n_batch \u4e2a Token\u3002 \u8c03\u7528 llama_decode() \u8fdb\u884c\u8ba1\u7b97\u3002</p> <p>llama-decode <pre><code>int32_t llama_decode(\n        struct llama_context * ctx,\n          struct llama_batch   batch) {\n    const int ret = llama_decode_impl(*ctx, batch);\n    if (ret != 0) {\n        LLAMA_LOG_ERROR(\"%s: failed to decode, ret = %d\\n\", __func__, ret);\n    }\n\n    return ret;\n}\n</code></pre></p> <p>\u8fdb\u5165llama_decode_impl() \u9996\u5148\u6784\u5efa\u8ba1\u7b97\u56fe <pre><code>        ggml_cgraph * gf = llama_build_graph(lctx, ubatch, false);\n</code></pre> \u5212\u5206\u8ba1\u7b97\u56fe\uff1a <pre><code>        ggml_backend_sched_alloc_graph(lctx.sched.get(), gf);\n</code></pre> \u8ba1\u7b97\u56fe\u8ba1\u7b97\uff1a <pre><code>llama_graph_compute(lctx, gf, n_threads,threadpool);\n</code></pre> \u8ba1\u7b97\u56fe\u8ba1\u7b97\u8fc7\u7a0b\uff1a \u8ba1\u7b97\u56fe\u5212\u5206\uff0c\u4e00\u76f4\u5212\u5206\u5230\u7b97\u5b50 <pre><code>ggml_backend_sched_graph_compute_async(lctx.sched.get(), gf);\nggml_backend_sched_compute_splits(sched);\nggml_backend_graph_compute_async(split_backend, &amp;gv);\n</code></pre> \u7b97\u5b50\u9009\u62e9\u51fd\u6570 <pre><code>enum ggml_status ggml_backend_graph_compute_async(ggml_backend_t backend, struct ggml_cgraph * cgraph) {\n    return backend-&gt;iface.graph_compute(backend, cgraph);\n}\n</code></pre></p> <p>\u6700\u7ec8\u5728\u8fd9\u91cc\u8ba1\u7b97backend-&gt;iface.graph_compute(backend, cgraph);\u8c03\u7528\u4e86\u540e\u7aef\u7684\u8ba1\u7b97\u63a5\u53e3\uff0cggml-cpu.c\u4e2dggml_compute_forward\u5b9e\u73b0\u4e86\u7b97\u5b50\u9009\u62e9\uff0c\u5728ggml_cpu_extra_compute_forward\u4e2d\u7684compute_forward\u51fd\u6570 \u5177\u4f53\u5230\u6211\u8fd9\u91cc\uff0c\u5728ggml-cpu-aarch64.cpp,\u5bf9\u4e8e\u4e58\u6cd5\u547d\u4ee4forward_mul_mat(params, op);\u5728\u7b97\u5b50\u4e3a\u4e58\u6cd5\u65f6\uff0c\u6700\u7ec8\u4f7f\u7528gemv\u6a21\u677f\u4f7f\u7528\u5bf9\u5e94\u7684\u5206\u5757\u4e58\u6cd5\u51fd\u6570,\u5177\u4f53\u5728\u6211\u7684\u4f8b\u5b50\uff0cggml_gemv_q4_0_4x8_q8_0(n, s, bs, vx, vy, nr, nc);\u8fd9\u662f\u8017\u65f6\u6700\u957f\u7684\u7b97\u5b50</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/","title":"Llama.cpp\u914d\u7f6e\u6587\u6863","text":"<p>\u73b0\u5728\u9700\u8981\u914d\u7f6e\u4f7f\u7528vscode\u7528\u4e8e\u8c03\u8bd5llama.cpp\u4ee3\u7801 \u5728\u672c\u5730\u673a\uff08x86\uff09\u4f7f\u7528\u4ea4\u53c9\u7f16\u8bd1\u4ea7\u751f\u5ba2\u6237\u7aef\uff08arm\uff09\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 \u9700\u8981\u7684\u5de5\u5177\u4ee5\u53ca\u64cd\u4f5c\u987a\u5e8f 1. \u672c\u5730\u5b89\u88c5vscode 2. \u672c\u5730\u5b89\u88c5cmake 3. \u4e0b\u8f7dndk 4. \u4e0b\u8f7dllama.cpp\u6e90\u7801 5. \u914d\u7f6evscode\u7684llama.cpp\u9879\u76ee\u5b8c\u6210\u8c03\u8bd5\u529f\u80fd</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#vscode","title":"\u672c\u5730\u5b89\u88c5vscode","text":"<p>vscode\u5b98\u65b9\u5730\u5740 \u5b89\u88c5\u63d2\u4ef6\uff1acmake,codelldb\uff0cc/c++\uff08\u6ca1\u6709\u4e5f\u884c\uff0c\u4f46\u662f\u8fd9\u4e2a\u5f88\u5e38\u7528\uff09 </p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#cmake","title":"\u672c\u5730\u5b89\u88c5cmake","text":"<p>cmake\u5b98\u65b9\u5730\u5740 cmake\u5b89\u88c5\u6559\u7a0b</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#ndk","title":"\u4e0b\u8f7dndk","text":"<p>ndk\u5b98\u65b9\u5730\u5740</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#_1","title":"\u4e0b\u8f7d\u6e90\u7801","text":"<pre><code>//bxxxx\u4e3a\u7279\u5b9a\u6570\u5b57\u7248\u672c\ngit clone -b bxxxx https://github.com/ggml-org/llama.cpp.git\n</code></pre>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#llamacpp","title":"\u914d\u7f6ellama.cpp\u5de5\u7a0b","text":""},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#_2","title":"\u5728\u670d\u52a1\u5668\u7aef\u914d\u7f6e\uff08\u6709\u624b\u673a\u8bbe\u5907\u8fde\u63a5\uff09","text":"<p>\u4e3a\u4e86\u5b9e\u73b0\u5728\u670d\u52a1\u5668\u4e0a\u7f16\u8bd1\uff0c\u8c03\u8bd5\uff0c\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c 1. \u4ee3\u7801\u6587\u4ef6\u653e\u5728\u624b\u673a\u7684/data/local/tmp/\u6587\u4ef6\u5939\u4e0b 2. lldb-server\u653e\u5728/data/local/tmp/\u6587\u4ef6\u5939\u4e0b\uff08\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u5728~/android-ndk-r28-linux/android-ndk-r28/toolchains/llvm/prebuilt/linux-x86_64/lib/clang/19/lib/linux/aarch64\u7684\u8def\u5f84\u4e0b\u627e\u5230\uff0c\u8fd9\u6761\u4fe1\u606f\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u66f4\u65b0\u6587\u4ef6\u6240\u4f5c\u63d0\u793a\uff08\u5982\u6709\u5fc5\u8981\uff09\uff09 \u63a5\u4e0b\u6765\u8bf7\u6309\u7167\u6b65\u9aa4\u8fdb\u884c\uff1a</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#step-1-makefile","title":"step 1 \u751f\u6210makefile","text":""},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#_3","title":"\u65b9\u5f0f\u4e00\uff1a\u76f4\u63a5\u4f7f\u7528\u547d\u4ee4\uff1a","text":"<p>\u76f4\u63a5\u8fd0\u884c\u4e0b\u9762\u8fd9\u6761\u547d\u4ee4\u53ef\u4ee5\u751f\u6210makefile\uff0c\u76f8\u5173\u7684\u914d\u7f6e\u6587\u4ef6\u5728build-android\u6587\u4ef6\u5939\u4e0b \u8bf7\u4fee\u6539\u4e3a\u4f60\u7684CMAKE_TOOLCHAIN_FILE\u4e3a\u4f60\u7684ndk\u4e0b\u7684toolchain\u8def\u5f84 <pre><code>cmake \\\n  -DCMAKE_TOOLCHAIN_FILE=\n  ~/Android/Sdk/ndk/28.0.12674087/build/cmake/android.toolchain.cmake \\\n  -DANDROID_ABI=arm64-v8a \\\n  -DANDROID_PLATFORM=android-28 \\\n  -DCMAKE_C_FLAGS=\"-march=armv8.7a\" \\\n  -DCMAKE_CXX_FLAGS=\"-march=armv8.7a\" \\\n  -DGGML_OPENMP=OFF \\\n  -DGGML_LLAMAFILE=OFF \\\n  -B build-android\n</code></pre> -DCMAKE_TOOLCHAIN_FILE=<code>${\u7cfb\u7edf\u7684ndk\u7f16\u8bd1\u5de5\u5177\u94fe\u5730\u5740}</code></p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#vscodecmakepresetjson","title":"\u65b9\u5f0f\u4e8c\uff1a\u4f7f\u7528vscode\u642d\u914dCMakePreset.json","text":"<p>\u8fd9\u91cc\u662fCMakePresets.json\u7684\u4e00\u4e2a\u793a\u4f8b\uff0c\u7f16\u8bd1\u540e\u7684\u6587\u4ef6\u5728<code>\"binaryDir\": \"${sourceDir}/out/build/${presetName}\"</code> <pre><code>{\n    \"version\": 4,\n    \"configurePresets\": [\n        {\n            \"name\": \"NDK-cross-compile\",\n            \"displayName\": \"NDK\",\n            \"description\": \"make\",\n            \"binaryDir\": \"${sourceDir}/out/build/${presetName}\",\n            \"cacheVariables\": {\n                \"CMAKE_BUILD_TYPE\": \"Debug\",\n                \"CMAKE_TOOLCHAIN_FILE\": \"~/Android/Sdk/ndk/28.0.12674087/build/cmake/android.toolchain.cmake\",\n                \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/out/install/${presetName}\",\n                \"CMAKE_C_FLAGS\": \"-march=armv8.7a\",\n                \"CMAKE_CXX_FLAGS\": \"-march=armv8.7a\",\n                \"GGML_OPENMP\": \"OFF\",\n                \"GGML_LLAMAFILE\": \"OFF\",\n                \"ANDROID_ABI\": \"arm64-v8a\",\n                \"ANDROID_PLATFORM\": \"android-28\"\n            }\n        }\n    ]\n}\n</code></pre> \u4e4b\u540e\u53ef\u4ee5\u4f7f\u7528\u56fe\u5f62\u5316\u754c\u9762\u76f4\u63a5build,\u6bcf\u6b21\u4fee\u6539\u5b8ccmake\u76f8\u5173\u914d\u7f6e\u6587\u4ef6\uff0c\u8bb0\u5f97\u8981\u91cd\u65b0\u751f\u6210makefile,\u5728\u8fd9\u91cc\u70b9configure\u3002 </p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#step-2","title":"step 2 \u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6","text":"<p>\u5982\u679c\u4e4b\u524d\u4f7f\u7528\u547d\u4ee4\u884c\u5f62\u5f0f\uff0c\u90a3\u4e48\u4f7f\u7528\u4e0b\u9762\u8fd9\u6761\u547d\u4ee4 <pre><code>cmake --build build-android --config Release -j{n}\n</code></pre> \u5982\u679c\u4f7f\u7528vscode\u914d\u7f6e\u56fe\u5f62\u5316\u547d\u4ee4 \u70b9\u8fd9\u91cc\uff1a </p> <p>\u6700\u7ec8\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5728out/build/ndk/bin\u4e0b</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#step-3","title":"step 3 \u5c06\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4f20\u9001\u5230\u624b\u673a\u8bbe\u5907","text":"<pre><code>//\u9996\u5148\u5207\u5230llama.cpp\u7684\u9879\u76ee\u76ee\u5f55\u4e0b\nadb push ./out/build/ndk /data/local/tmp/workspace/\n</code></pre>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#step-4","title":"step 4 \u8c03\u8bd5\u4ee3\u7801","text":"<p>\u5982\u679c\u9700\u8981\u8fd0\u884c\u4ee3\u7801\uff0c\u76f4\u63a5\u5230\u8bbe\u5907\u7aef\u5bf9\u5e94\u7684\u76ee\u5f55\u4e0b\u8fd0\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6 \u73b0\u5728\u60f3\u8981\u63d0\u4f9b\u4e00\u4e2a\u56fe\u5f62\u754c\u9762\u7684\u8c03\u8bd5\u65b9\u5f0f \u5177\u4f53\u539f\u7406\u662flldb-server\u76d1\u63a7\u8bbe\u5907\u7aef\u7a0b\u5e8f\u8fd0\u884c\u5e76\u628a\u4fe1\u606f\u53d1\u9001\u7ed9\u4e3b\u673a\u7aef\uff0c\u4e3b\u673a\u7aef\u4f7f\u7528codelldb\u4ee5\u63d0\u4f9b\u56fe\u5f62\u754c\u9762</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#step41","title":"step4.1","text":"<p>\u9996\u5148\u9700\u8981\u5199\u4e00\u4e2alaunch.json\u811a\u672c\u4ee5\u4fbf\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u8fde\u63a5\u5230\u8bbe\u5907\u7aef\u5e76\u5c06lldb\u9644\u52a0\u5230\u7a0b\u5e8f\u4e0a(\"./vscode/launch.json\") <pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"type\": \"lldb\",\n            \"request\": \"launch\",\n            \"name\": \"lldb launch\",\n            \"program\": \"/data/local/tmp/workspace/ndk/bin/llama-cli\",\n            \"args\": [\n                \"-m\",\n                \"/data/local/tmp/ggml-model-q4_0.gguf\"\n            ],\n            \"preLaunchTask\": \"build task\",\n            \"initCommands\": [\n                \"platform select remote-android\",\n                \"platform connect connect://localhost:9090\",\n                \"settings set target.inherit-env false\",\n                \"platform settings -w /data/local/tmp/\",\n                \"platform status\"\n            ],\n            \"env\": {\n                \"LD_LIBRARY_PATH\": \"/data/local/tmp/workspace/ndk/bin\"\n            }\n        }\n    ]\n}\n</code></pre> \u89e3\u91ca\uff1a 1. \u5728env\u4e2d\u52a0\u5165\u4ee5/data/local/tmp/workspace/ndk/bin\u8def\u5f84\u4f5c\u4e3a\u9644\u52a0\u94fe\u63a5\u5e93\u8def\u5f84\uff0c\u53ef\u4ee5\u6539\u4e3a\u5176\u4ed6\u8def\u5f84\uff0c\u5728\u5bf9\u5e94\u8def\u5f84\u4e0b\u8fd0\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u52a0\u4e0aLD_LIBRARY_PATH=.\u4f5c\u4e3a\u524d\u7f00\uff0c\u8fd9\u6837\u4e8c\u8fdb\u5236\u6587\u4ef6\u5c31\u53ef\u4ee5\u94fe\u63a5\u5230\u5e93 2. initcommands\u662f\u521d\u59cb\u5316\u547d\u4ee4\uff0c\u7528\u4e8e\u81ea\u52a8\u8fde\u63a5\u8bbe\u5907 3. preLaunchTask\u4ee3\u8868\u524d\u7f6e\u4efb\u52a1\uff0c\u5728\u6bcf\u6b21\u8fde\u63a5\u8bbe\u5907\u524d\u505a\u7684\u4e8b 4. programs\u548cargs\u4ee3\u8868\u8fd0\u884c\u7a0b\u5e8f\u6240\u5728\u4f4d\u7f6e\u548c\u9644\u52a0\u53d8\u91cf\uff0c\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6a21\u578b\u7684\u4f4d\u7f6e\u9700\u8981\u53ef\u4ee5\u6539\u52a8</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#step-42","title":"step 4.2","text":"<p>\u63a5\u7740\u5199\u4e00\u4e2atasks.json(./vscode/tasks.json)\u7528\u4e8e\u914d\u7f6e\u524d\u7f6e\u4efb\u52a1 <pre><code>{\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"build task\",\n            \"type\": \"shell\",\n            \"command\": \"bash debug.sh\"\n        }\n    ]\n}\n</code></pre></p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#step-43","title":"step 4.3","text":"<p>tasks.json\u8fd0\u884cdebug.sh\u4e2d\u7684\u547d\u4ee4\u7528\u4e8e\u6267\u884c\u524d\u7f6e\u4efb\u52a1(./debug.sh)\uff0c\u63a5\u4e0b\u6765\u5199\u4e00\u4e2adebug.sh</p> <p><pre><code>#!/bin/bash\n# adb push /home/gyh/llama-test/llama.cpp-b3173/out/build/* /data/local/tmp/workspace/\nadb forward tcp:9090 tcp:9090\n# adb shell \"cd /data/local/tmp &amp;&amp; ./data/local/tmp/lldb-server platform --server --listen '*:9090'\"\ngnome-terminal -- bash -c \"adb shell 'cd /data/local/tmp &amp;&amp; ./lldb-server platform --listen *:9090 --server'\"\n</code></pre> \u6ce8\u91ca\u6389\u76842\u53e5\u7528\u4e8e\u63a8\u9001\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u76f4\u63a5\u4f7f\u7528adb\u6267\u884c\u547d\u4ee4(\u56e0\u4e3a\u5bf9\u4e8e\u4e0d\u540c\u7684\u684c\u9762\u73af\u5883\u53ef\u80fd\u9700\u8981\u8c03\u6574)</p> <p>\u4e4b\u540e\u53ef\u4ee5\u5728run and debug\u754c\u9762\u9009\u62e9\u8bbe\u7f6e\u7684\u767b\u9646\u8c03\u8bd5\u8fdb\u884c\u56fe\u5f62\u5316\u8c03\u8bd5 </p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#_4","title":"\u5728\u672c\u5730\u7aef\u914d\u7f6e\uff08\u6ca1\u6709\u624b\u673a\u8bbe\u5907\u8fde\u63a5\uff09","text":"<p>\u9996\u5148\u53c2\u7167\u524d\u6587\u5728\u672c\u5730\u914d\u7f6e\u597d\u7f16\u8bd1\u51fa\u4e8c\u8fdb\u5236\u6587\u4ef6[step 2 \u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6]\u8fd9\u4e00\u8282</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#step-1-qemu","title":"step 1 \u5b89\u88c5qemu","text":"<p>\u8bf7\u5b89\u88c5qemu\uff0c\u5b98\u65b9\u6709\u4e00\u4e2a\u6559\u7a0b \u8fd9\u91cc\u6709\u4e00\u4e2aqemu\u5b98\u65b9\u5173\u4e8esve\u7279\u6027\u7684\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003</p> <pre><code>sudo apt install qemu-user -y\n//\u8fd9\u91cc\u7f3a\u4ec0\u4e48\u5e93\u5c31\u5b89\u88c5\u4e00\u4e0b\uff0c\u53c2\u8003qemu\u7684\u5b89\u88c5\u6587\u6863\n</code></pre> <p>\u4fee\u6539cmakepresets.json\u5982\u4e0b <pre><code>{\n    \"name\": \"ndk\",\n    \"displayName\": \"NDK\",\n    \"description\": \"\u4f7f\u7528NDK\u5de5\u5177\u94fe\u4ea4\u53c9\u7f16\u8bd1\",\n    \"binaryDir\": \"${sourceDir}/out/build/${presetName}\",\n    \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": \"Debug\",\n        \"CMAKE_TOOLCHAIN_FILE\": \"~/Android/Sdk/ndk/29.0.13113456/build/cmake/android.toolchain.cmake\",\n        \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/out/install/${presetName}\",\n        \"CMAKE_C_FLAGS\": \"-march=armv8.7a+sve+sve2 -g -static\",\n        \"CMAKE_CXX_FLAGS\": \"-march=armv8.7a+sve+sve2 -g -static\",\n        \"GGML_OPENMP\":\"OFF\",\n        \"GGML_LLAMAFILE\":\"OFF\",\n        \"BUILD_SHARED_LIBS\":\"OFF\",\n        \"ANDROID_ABI\": \"arm64-v8a\",\n        \"ANDROID_PLATFORM\": \"android-35\"\n    }\n}\n</code></pre></p> <p>\u8bf7\u4fee\u6539toolchain\u8def\u5f84\u4e3a\u4f60\u672c\u673a\u5b89\u88c5\u8def\u5f84 \u8fd9\u91cc\u5173\u95ed\u5171\u4eab\u5e93\u7684\u6784\u5efa\uff0c\u4ee5\u4fbf\u4e8e\u6784\u5efa\u9759\u6001\u4e8c\u8fdb\u5236\u6587\u4ef6</p> <p>\u7528\u6237\u6a21\u5f0f\u8fd0\u884cllama-cli\u7684\u547d\u4ee4\uff0c-m \u540e\u662f\u4f60\u7684\u6a21\u578b\u5730\u5740\u3002 <pre><code>qemu-aarch64 -cpu max ./out/build/ndk/bin/llama-cli -m ~/workspace/chat-llama2-1b-1.0.Q4_0.gguf\n</code></pre> \u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u683c\u5f0f\u8fd0\u884c\u5176\u4ed6\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002</p> <p>\u672c\u5730\u53ef\u4ee5\u9a8c\u8bc1\u4f60\u7684\u4ee3\u7801\u8fd0\u884c\u662f\u5426\u6b63\u5e38\uff0c\u5982\u679c\u60f3\u8981\u5728\u672c\u5730\u8c03\u8bd5\u8fd0\u884c\uff0c\u8bf7\u81ea\u884c\u641c\u7d22qemu\u7684\u8c03\u8bd5\u6559\u7a0b\uff0cqemu\u63d0\u4f9b\u4e86\u4e00\u5957\u8c03\u8bd5\u63a5\u53e3\u3002\u7531\u4e8e\u672c\u6b21\u4f7f\u7528\u7684\u662f\u7528\u6237\u6a21\u5f0f\uff0c\u5e76\u6ca1\u6709\u6a21\u62dfcpu\u5bc4\u5b58\u5668\u7279\u6027\uff0c\u6240\u4ee5\u60f3\u8981\u89c2\u5bdf\u7279\u5b9a\u7684\u5bc4\u5b58\u5668\u52a8\u4f5c\uff0c\u4ecd\u7136\u9700\u8981\u5230\u8bbe\u5907\u7aefDEBUG\u3002\u672c\u5730\u4f7f\u7528\u6253\u5370\u8f93\u51fa\u548c\u65ad\u8a00\u5224\u65ad\u5373\u53ef\u3002</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#_5","title":"\u6d4b\u8bd5\u6027\u80fd","text":""},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#step1","title":"step1 \u7f16\u5199\u6d4b\u8bd5\u811a\u672c","text":"<p>\u7f16\u5199\u76d1\u63a7\u811a\u672cmonitor.sh <pre><code>#!/system/bin/sh\n# monitor.sh\n\n# \u542f\u52a8 llama-cli \u5e76\u83b7\u53d6 PID\n./llama.cpp-b3173/build-android/bin/llama-cli -m ./q4_0/ggml-model-Q4_0.gguf -p \"what is the meaning of life\" -n 128 &amp;\nPID=$!\n\n# # \u542f\u52a8 simpleperf\uff0c\u76d1\u63a7 llama-cli \u8fdb\u7a0b\n# ./simpleperf stat -e cache-references,cache-references:u,cache-references:k \\\n#       -e cache-misses,cache-misses:u,cache-misses:k,instructions \\\n#       -p $PID &amp; \n\n./simpleperf record -g -o perf.data -p $PID &amp; --dump\nSIMPLEPERF_PID=$!\n\n# \u7b49\u5f85 llama-cli \u8fdb\u7a0b\u7ed3\u675f\nwait $PID\n\n# \u7b49\u5f85 simpleperf \u7ed3\u675f\uff08\u5982\u679c\u5b83\u8fd8\u5728\u8fd0\u884c\uff09\nwait $SIMPLEPERF_PID\n\n# \u5728\u6b64\u65f6\uff0cllama-cli \u548c simpleperf \u90fd\u5df2\u7ecf\u7ed3\u675f\necho \"Monitoring finished, perf.data generated.\"\n</code></pre> \u6ce8\u610fadb\u73af\u5883\u4f7f\u7528sh,\u800c\u975ebash\u3002 PID=$!\u662f\u83b7\u5f97\u521a\u521a\u542f\u52a8\u7684\u8fdb\u7a0bpid\u7684\u597d\u529e\u6cd5</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#step2-monitorsh","title":"step2 \u63a8\u9001monitor.sh\u5230\u8bbe\u5907","text":"<pre><code>adb push path_to_monitor.sh /data/local/tmp/workspace/\n</code></pre> <p>\u8fd0\u884c\u811a\u672c\uff1a  \u62c9\u53d6perf.data\u6587\u4ef6\uff1a <pre><code>adb pull /data/local/tmp/workspace/perf.data perf.data\n</code></pre></p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/#step3","title":"step3 \u5904\u7406\u6570\u636e","text":"<p>\u4f7f\u7528ndk\u4e0b\u7684simpleperf\u6587\u4ef6\u5939\u4e0b\u7684\u5de5\u5177\u5904\u7406\u6570\u636e \u4f8b\u5982\u6211\u7684simpleperf\u5730\u5740\u662f\uff1a~/Android/Sdk/ndk/28.0.12674087/simpleperf \u4ee3\u7801\u4e2d\u4e5f\u9644\u52a0\u6709mysimpleperf\u4ee5\u4f9b\u4f7f\u7528 <pre><code>simpleperf report \u751f\u6210\u62a5\u544a\n\u5206\u6790\u751f\u6210report.txt\n\"simpleperf report -i /sdcard/perf.data -o /sdcard/report.txt\"\n\"simpleperf report -g -i /sdcard/perf.data -o /sdcard/report_g.txt\"\n\n\u751f\u6210\u8c03\u7528\u5173\u7cfb\u56fe\nsimpleperf report -g --symfs . &gt;report\n\n\u751f\u6210report.html\npython report_html.py -i ./perf.data -o ./perf.html\n</code></pre></p> <p>report.html\u793a\u610f\uff1a </p> <p>\u706b\u7130\u56fe\uff1a </p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/","title":"llama.cpp\u5b66\u4e60","text":""},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/#_1","title":"\u4ecb\u7ecd\uff1a","text":"<p>llama.cpp,\u7248\u672c\u662fb3173,github\u5730\u5740:https://github.com/ggerganov/llama.cpp/releases?q=b3173&amp;expanded=true \u672c\u6587\u6863\u8bb0\u5f55\u5c06\u5176\u90e8\u7f72\u5728arm\u5e73\u53f0\u7684\u5b9e\u9a8c\u4ee3\u7801\u548c\u64cd\u4f5c\u6d41\u7a0b\u4ee5\u4f9b\u53c2\u8003</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/#_2","title":"\u90e8\u7f72\u8bf4\u660e\uff1a","text":"<ol> <li>\u4f7f\u7528adb\u76f4\u63a5\u8fde\u63a5\u8bbe\u5907,\u4ee3\u7801\u653e\u5728/data/local/tmp/workspace/llama.cpp-b3173</li> <li>android\u7aef\u7684\u7f16\u8bd1\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863,\u7f16\u8bd1\u7684ndk\u53ef\u4ee5\u4f7f\u7528android studio\u4e0b\u8f7d\u540e,\u5728x86\u7aef\u7f16\u8bd1arm\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6,\u7f16\u8bd1\u4f7f\u7528cmake.</li> </ol>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/#_3","title":"\u4e0b\u8f7d\u4ee3\u7801","text":"<p>b3173\uff1a https://github.com/ggerganov/llama.cpp/releases?q=b3173&amp;expanded=true</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/#_4","title":"\u7f16\u8bd1\u4ee3\u7801\uff08\u5b89\u5353\u7248\u672c\uff09\uff1a","text":""},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/#1","title":"1. \u76f4\u63a5\u4f7f\u7528\u547d\u4ee4\uff1a","text":"<p><pre><code>cmake \\\n  -DCMAKE_TOOLCHAIN_FILE=\n  ~/Android/Sdk/ndk/28.0.12674087/build/cmake/android.toolchain.cmake \\\n  -DANDROID_ABI=arm64-v8a \\\n  -DANDROID_PLATFORM=android-28 \\\n  -DCMAKE_C_FLAGS=\"-march=armv8.7a\" \\\n  -DCMAKE_CXX_FLAGS=\"-march=armv8.7a\" \\\n  -DGGML_OPENMP=OFF \\\n  -DGGML_LLAMAFILE=OFF \\\n  -B build-android\n</code></pre> -DCMAKE_TOOLCHAIN_FILE=<code>${\u7cfb\u7edf\u7684ndk\u7f16\u8bd1\u5de5\u5177\u94fe\u5730\u5740}</code></p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/#2vscodecmakepresetjson","title":"2.\u4f7f\u7528vscode\u642d\u914dCMakePreset.json","text":"<p>\u8fd9\u91cc\u662fCMakePresets.json\u7684\u4e00\u4e2a\u793a\u4f8b\uff0c\u7f16\u8bd1\u540e\u7684\u6587\u4ef6\u5728<code>\"binaryDir\": \"${sourceDir}/out/build/${presetName}\"</code> <pre><code>{\n    \"version\": 4,\n    \"configurePresets\": [\n        {\n            \"name\": \"NDK-cross-compile\",\n            \"displayName\": \"NDK\",\n            \"description\": \"make\",\n            \"binaryDir\": \"${sourceDir}/out/build/${presetName}\",\n            \"cacheVariables\": {\n                \"CMAKE_BUILD_TYPE\": \"Debug\",\n                \"CMAKE_TOOLCHAIN_FILE\": \"~/Android/Sdk/ndk/28.0.12674087/build/cmake/android.toolchain.cmake\",\n                \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/out/install/${presetName}\",\n                \"CMAKE_C_FLAGS\": \"-march=armv8.7a\",\n                \"CMAKE_CXX_FLAGS\": \"-march=armv8.7a\",\n                \"GGML_OPENMP\": \"OFF\",\n                \"GGML_LLAMAFILE\": \"OFF\",\n                \"ANDROID_ABI\": \"arm64-v8a\",\n                \"ANDROID_PLATFORM\": \"android-28\"\n            }\n        }\n    ]\n}\n</code></pre> \u4e4b\u540e\u53ef\u4ee5\u4f7f\u7528\u56fe\u5f62\u5316\u754c\u9762\u76f4\u63a5build</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/#_5","title":"\u8fd0\u884c\u4ea4\u4e92\uff1a","text":"<p>\u4f7f\u7528 <pre><code>adb push ./out/build/ndk /data/local/tmp/\n</code></pre> \u5c06\u7f16\u8bd1\u540e\u7684\u6587\u4ef6\u4f20\u8f93\u5230/data/local/tmp/ndk\u6587\u4ef6\u5939\u4e0b</p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/#_6","title":"\u8bc4\u4f30\u6027\u80fd\uff1a","text":"<p>\u7f16\u5199\u76d1\u63a7\u811a\u672cmonitor.sh <pre><code>#!/system/bin/sh\n# monitor.sh\n\n# \u542f\u52a8 llama-cli \u5e76\u83b7\u53d6 PID\n./llama.cpp-b3173/build-android/bin/llama-cli -m ./q4_0/ggml-model-Q4_0.gguf -p \"what is the meaning of life\" -n 128 &amp;\nPID=$!\n\n# # \u542f\u52a8 simpleperf\uff0c\u76d1\u63a7 llama-cli \u8fdb\u7a0b\n# ./simpleperf stat -e cache-references,cache-references:u,cache-references:k \\\n#       -e cache-misses,cache-misses:u,cache-misses:k,instructions \\\n#       -p $PID &amp; \n\n./simpleperf record -g -o perf.data -p $PID &amp; --dump\nSIMPLEPERF_PID=$!\n\n# \u7b49\u5f85 llama-cli \u8fdb\u7a0b\u7ed3\u675f\nwait $PID\n\n# \u7b49\u5f85 simpleperf \u7ed3\u675f\uff08\u5982\u679c\u5b83\u8fd8\u5728\u8fd0\u884c\uff09\nwait $SIMPLEPERF_PID\n\n# \u5728\u6b64\u65f6\uff0cllama-cli \u548c simpleperf \u90fd\u5df2\u7ecf\u7ed3\u675f\necho \"Monitoring finished, perf.data generated.\"\n</code></pre> \u6ce8\u610fadb\u73af\u5883\u4f7f\u7528sh,\u800c\u975ebash\u3002 PID=$!\u662f\u83b7\u5f97\u521a\u521a\u542f\u52a8\u7684\u8fdb\u7a0bpid\u7684\u597d\u529e\u6cd5</p> <p>\u63a8\u9001monitor.sh\u5230\u8bbe\u5907 <pre><code>adb push path_to_monitor.sh /data/local/tmp/workspace/\n</code></pre></p> <p>\u8fd0\u884c\u811a\u672c\uff1a  \u62c9\u53d6perf.data\u6587\u4ef6\uff1a <pre><code>adb pull /data/local/tmp/workspace/perf.data perf.data\n</code></pre></p> <p>\u4f7f\u7528ndk\u4e0b\u7684simpleperf\u6587\u4ef6\u5939\u4e0b\u7684\u5de5\u5177\u5904\u7406\u6570\u636e \u4f8b\u5982\u6211\u7684simpleperf\u5730\u5740\u662f\uff1a~/Android/Sdk/ndk/28.0.12674087/simpleperf \u4ee3\u7801\u4e2d\u4e5f\u9644\u52a0\u6709mysimpleperf\u4ee5\u4f9b\u4f7f\u7528 <pre><code>simpleperf report \u751f\u6210\u62a5\u544a\n\u5206\u6790\u751f\u6210report.txt\n\"simpleperf report -i /sdcard/perf.data -o /sdcard/report.txt\"\n\"simpleperf report -g -i /sdcard/perf.data -o /sdcard/report_g.txt\"\n\n\u751f\u6210\u8c03\u7528\u5173\u7cfb\u56fe\nsimpleperf report -g --symfs . &gt;report\n\n\u751f\u6210report.html\npython report_html.py -i ./perf.data -o ./perf.html\n\u751f\u6210\u706b\u7130\u56fe(\u8fd9\u91cc\u9700\u8981\u4e0b\u8f7dFlameGraph\u9879\u76ee)\npython ./simpleperf/report_sample.py &gt; out.perf\n./FlameGraph/stackcollapse-perf.pl out.perf &gt; out.folded\n./FlameGraph/flamegraph.pl out.folded &gt; out.svg\n</code></pre></p> <p>report.html\u793a\u610f\uff1a </p> <p>\u706b\u7130\u56fe\uff1a </p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/#lldbserverdebug","title":"\u4f7f\u7528lldb.server\u8fdb\u884cdebug","text":""},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/#vscodelaunchjson","title":"\u8bbe\u7f6e\u767b\u9646\u8c03\u8bd5\u811a\u672c(.vscode/launch.json)","text":"<pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"type\": \"lldb\",\n            \"request\": \"launch\",\n            \"name\": \"lldb launch\",\n            \"program\": \"/data/local/tmp/workspace/ndk/bin/llama-cli\",\n            \"args\": [\n                \"-m\",\n                \"/data/local/tmp/ggml-model-q4_0.gguf\"\n            ],\n            \"preLaunchTask\": \"build task\",\n            \"initCommands\": [\n                \"platform select remote-android\",\n                \"platform connect connect://localhost:9090\",\n                \"settings set target.inherit-env false\",\n                \"platform settings -w /data/local/tmp/\",\n                \"platform status\"\n            ],\n            \"env\": {\n                \"LD_LIBRARY_PATH\": \"/data/local/tmp/workspace/ndk/bin\"\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/#tasksjson","title":"\u8bbe\u7f6e\u524d\u7f6e\u4efb\u52a1\uff08tasks.json\uff09","text":"<pre><code>{\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"build task\",\n            \"type\": \"shell\",\n            \"command\": \"bash debug.sh\"\n        }\n    ]\n}\n</code></pre> <p>\u5177\u4f53\u7684\u4efb\u52a1\u53ef\u4ee5\u5728debug.sh\u4e2d\u8c03\u6574 <pre><code>#!/bin/bash\n# adb push /home/gyh/llama-test/llama.cpp-b3173/out/build/* /data/local/tmp/workspace/\nadb forward tcp:9090 tcp:9090\n# adb shell \"cd /data/local/tmp &amp;&amp; ./data/local/tmp/lldb-server platform --server --listen '*:9090'\"\ngnome-terminal -- bash -c \"adb shell 'cd /data/local/tmp &amp;&amp; ./lldb-server platform --listen *:9090 --server'\"\n</code></pre></p> <p>\u4e4b\u540e\u53ef\u4ee5\u5728run and debug\u754c\u9762\u9009\u62e9\u8bbe\u7f6e\u7684\u767b\u9646\u8c03\u8bd5\u8fdb\u884c\u56fe\u5f62\u5316\u8c03\u8bd5 </p>"},{"location":"Llama/llama.cpp%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/#qemu","title":"\u4f7f\u7528qemu\u5728\u672c\u5730\u6a21\u62df\u8fd0\u884c","text":"<p>\u9996\u5148\u5b89\u88c5qemu,\u5b98\u65b9\u6709\u4e00\u4e2a\u6559\u7a0b</p> <pre><code>sudo apt install qemu-user -y\n//\u8fd9\u91cc\u7f3a\u4ec0\u4e48\u5e93\u5c31\u5b89\u88c5\u4e00\u4e0b\uff0c\u53c2\u8003qemu\u7684\u5b89\u88c5\u6587\u6863\n</code></pre> <p>\u4fee\u6539cmakepresets.json\u5982\u4e0b <pre><code>{\n    \"name\": \"ndk\",\n    \"displayName\": \"NDK\",\n    \"description\": \"\u4f7f\u7528NDK\u5de5\u5177\u94fe\u4ea4\u53c9\u7f16\u8bd1\",\n    \"binaryDir\": \"${sourceDir}/out/build/${presetName}\",\n    \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": \"Debug\",\n        \"CMAKE_TOOLCHAIN_FILE\": \"~/Android/Sdk/ndk/29.0.13113456/build/cmake/android.toolchain.cmake\",\n        \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/out/install/${presetName}\",\n        \"CMAKE_C_FLAGS\": \"-march=armv8.7a+sve+sve2 -g -static\",\n        \"CMAKE_CXX_FLAGS\": \"-march=armv8.7a+sve+sve2 -g -static\",\n        \"GGML_OPENMP\":\"OFF\",\n        \"GGML_LLAMAFILE\":\"OFF\",\n        \"BUILD_SHARED_LIBS\":\"OFF\",\n        \"ANDROID_ABI\": \"arm64-v8a\",\n        \"ANDROID_PLATFORM\": \"android-35\"\n    }\n}\n</code></pre> \u91cd\u70b9\u662f\u5173\u95ed\u5171\u4eab\u5e93\u7684\u6784\u5efa\uff0c\u4ee5\u4fbf\u4e8e\u6784\u5efa\u9759\u6001\u4e8c\u8fdb\u5236\u6587\u4ef6</p> <p>\u7528\u6237\u6a21\u5f0f\u8fd0\u884cllama-cli\u7684\u547d\u4ee4 <pre><code>qemu-aarch64 -cpu max ./out/build/ndk/bin/llama-cli -m ~/workspace/chat-llama2-1b-1.0.Q4_0.gguf\n</code></pre> \u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u683c\u5f0f\u8fd0\u884c\u5176\u4ed6\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002</p>"},{"location":"Llama/sve%E7%AE%97%E5%AD%90%E8%A7%A3%E9%87%8A/","title":"Sve\u7b97\u5b50\u89e3\u91ca","text":"<p>\u8fd9\u91cc\u8bb0\u5f55\u4e86\u5173\u4e8e\u4e3a<code>ggml_gemv_q4_0_4x8_q8_0</code>\u51fd\u6570\u6dfb\u52a0sve\u8ba1\u7b97\u65b9\u5f0f\u7684\u8fc7\u7a0b</p> <p>sve \u7b97\u5b50 <pre><code>#if ! ((defined(_MSC_VER)) &amp;&amp; ! defined(__clang__)) &amp;&amp; defined(__aarch64__) &amp;&amp; defined(__ARM_FEATURE_SVE) \n    //only 128bits support\n    if (ggml_cpu_has_sve() &amp;&amp; ggml_cpu_get_sve_cnt() == 16) {\n\n        //\u8fd9\u91cc\u51c6\u5907\u4e00\u4e2a\u7528\u4e8e\u8c03\u6362\u6570\u7ec41,2\u53f7\u5143\u7d20\u987a\u5e8f\u7684mask,\u4ee5\u53ca8bit,16bit,32bit\u7684mask\n        uint32_t indices[] = {0, 2, 1, 3}; \n        svuint32_t index_vec = svld1_u32(svptrue_b32(), indices);\n        const svbool_t pg_b8 = svptrue_b8();\n        const svbool_t pg_b16 = svptrue_b16();\n        const svbool_t pg_b32 = svptrue_b32();\n\n        const block_q4_0x4 * b_ptr = (const block_q4_0x4 *) vx; \n        for (int c = 0; c &lt; nc; c += ncols_interleaved) {\n            const block_q8_0 * a_ptr = (const block_q8_0 *) vy;\n            svfloat32_t acc= svdup_n_f32(0.0f);\n            for (int b = 0; b &lt; nb; b++) {\n                //\u4e0eneon\u76f8\u540c\u7684\u53d6\u6570\u8fc7\u7a0b\uff0c\u5229\u7528\u6307\u9488\u504f\u79fb\u548csvld1,\u4e3a128bit\u5bc4\u5b58\u5668\u586b\u514516\u4e2aint8_t\n                const svint8_t b0 = svld1_s8(pg_b8,(const int8_t *) b_ptr-&gt;qs);\n                const svint8_t b1 = svld1_s8(pg_b8,(const int8_t *) b_ptr-&gt;qs + 16);\n                const svint8_t b2 = svld1_s8(pg_b8,(const int8_t *) b_ptr-&gt;qs + 32);\n                const svint8_t b3 = svld1_s8(pg_b8,(const int8_t *) b_ptr-&gt;qs + 48);\n\n                svfloat16_t bd = svld1_f16(pg_b16, (const __fp16 *)b_ptr-&gt;d);//\u53d6\u51faf16\u51718\u4e2a\uff0c\u4f46\u53ea\u6709\u524d\u56db\u4e2a\u6709\u7528\n                svfloat16_t ad = svdup_n_f16(*(const __fp16 *) &amp;a_ptr-&gt;d);//\u53d6\u51faf16\u590d\u52368\u6b21\n                svfloat32_t scale = svmul_f32_x(pg_b32,svcvt_f32_f16_x(pg_b16, ad),svcvt_f32_f16_x(pg_b16, svzip1(bd, bd)));\n                //\u5148\u901a\u8fc7zip\u628abd\u7684\u6570\u636e\u6bcf\u4e2a\u590d\u52362\u6b21\uff0c[A,B,C,D]=&gt;[A,A,B,B,C,C,D,D],\u8fd9\u6837\u5bc4\u5b58\u5668\u4e2d\u53ea\u4fdd\u7559\u524d\u56db\u4e2a\u6570\u636e\uff0c\u518d\u548cad\u7684\u6570\u636e\u90fd\u8f6c\u5316\u4e3af32,\u56db\u4e2af32\u76f8\u4e58\u5f97\u5230\u7f29\u653e\u7cfb\u6570\uff0c\u76f8\u5bf9\u4e8e\u539f\u6709\u76844\u4e2af16\u76f8\u4e58\uff0c\u8fd9\u91cc\u591a\u7b97\u4e86\n\n                //\u4e0eneon\u76f8\u540c\u7684\u53d6\u6570\u8fc7\u7a0b\uff0c\u5229\u7528\u6307\u9488\u504f\u79fb\u548csvdup,\u4e3a128bit\u5bc4\u5b58\u5668\u586b\u51452\u4e2a64bit\u6570\uff0c\u6bcf\u4e2a64bit\u4e2d\u5305\u542b8\u4e2aint8,2\u4e2a64bit\u76f8\u540c\n                const svint8_t a0 =svreinterpret_s8_u64(svdup_n_u64(*((const uint64_t *)a_ptr-&gt;qs)));\n                const svint8_t a1 =svreinterpret_s8_u64(svdup_n_u64(*((const uint64_t *)a_ptr-&gt;qs+1)));\n                const svint8_t a2 =svreinterpret_s8_u64(svdup_n_u64(*((const uint64_t *)a_ptr-&gt;qs+2)));\n                const svint8_t a3 =svreinterpret_s8_u64(svdup_n_u64(*((const uint64_t *)a_ptr-&gt;qs+3)));\n\n                svint32_t ret0 = svdup_n_s32(0);\n                svint32_t ret1 = svdup_n_s32(0);\n\n                //\u4e0eneon\u76f8\u540c\u7684dot\u6307\u4ee4\uff0c\u6bcf\u56db\u4e2a\u5bf9\u5e94\u7684int8\u6570\u636e\u76f8\u4e58\u52a0\u5230\u4e00\u4e2aint32\u4e2d\n                ret0 = svdot_s32(ret0, b0 &lt;&lt; 4, a0);\n                ret1 = svdot_s32(ret1, b1 &lt;&lt; 4, a0);\n                ret0 = svdot_s32(ret0, b2 &lt;&lt; 4, a1);\n                ret1 = svdot_s32(ret1, b3 &lt;&lt; 4, a1);\n\n                ret0 = svdot_s32(ret0, b0 &amp; 0xf0U, a2);\n                ret1 = svdot_s32(ret1, b1 &amp; 0xf0U, a2);\n                ret0 = svdot_s32(ret0, b2 &amp; 0xf0U, a3);\n                ret1 = svdot_s32(ret1, b3 &amp; 0xf0U, a3);\n\n                //\u7531\u4e8esve\u6ca1\u6709neon\u7684\u6c34\u5e73\u76f8\u52a0\u6307\u4ee4\uff0c\u5373[A,B,C,D][E,F,G,H]=&gt;[A+B,C+D,E+F,G+H];\n                //sve2\u7684\u6210\u5bf9\u76f8\u52a0\u662f[A,B,C,D][E,F,G,H]=&gt;[A+B,E+F,C+D,G+H];\u6240\u4ee5\u9700\u8981sve\u8c03\u6362\u987a\u5e8f\u3002\n\n                // uint32_t indices[] = {0, 2, 1, 3}; \n                // svuint32_t index_vec = svld1_u32(svptrue_b32(), indices);\n                svint32_t ret = svtbl_s32(svaddp_s32_m(pg_b32, ret0, ret1),index_vec);\n\n\n                //\u8fd9\u91cc\u8fd8\u8bb0\u5f55\u4e862\u79cd\u53ea\u4f7f\u7528sve\u547d\u4ee4\u7684\u5b9e\u73b0\u6c34\u5e73\u76f8\u52a0\u6548\u679c\u7684\u547d\u4ee4\n                // svint32_t ret = svadd_s32_m(svptrue_b32(), svuzp1_s32(ret0, ret1), svuzp2_s32(ret0, ret1));\n                // svint32_t ret = svadd_s32_m(svptrue_b32(), svzip1_s32(ret0, ret1), svzip2_s32(ret0, ret1)); \n\n                //\u4e0eneon\u76f8\u540c\u7684mla\u8fc7\u7a0b\uff0c\u5c06ret\u7ed3\u679c\u548c\u7f29\u653e\u7cfb\u6570\u76f8\u4e58\uff0c\u8fd8\u539f\u4e3af32\n                acc = svmla_f32_x(pg_b32,acc,svcvt_f32_s32_x(pg_b32,ret&gt;&gt;4),scale);\n                a_ptr++;\n                b_ptr++;\n            }\n            //\u4e0eneon\u76f8\u540c\u7684\u8fc7\u7a0b\uff0c\u5c06\u6570\u636e\u5b58\u50a8\u56de\u6307\u9488\u4e2d\n            svst1_f32(pg_b32,s, acc);\n            s += ncols_interleaved;\n        }\n        return;\n    } \n#endif // #if ! ((defined(_MSC_VER)) &amp;&amp; ! defined(__clang__)) &amp;&amp; defined(__aarch64__) &amp;&amp; defined(__ARM_FEATURE_SVE2)\n</code></pre></p> <p>\u539fneon\u7b97\u5b50</p> <pre><code>#if ! ((defined(_MSC_VER)) &amp;&amp; ! defined(__clang__)) &amp;&amp; defined(__aarch64__) &amp;&amp; defined(__ARM_NEON) &amp;&amp; defined(__ARM_FEATURE_DOTPROD)\n    if (ggml_cpu_has_neon() &amp;&amp; ggml_cpu_has_dotprod()) {\n        const block_q4_0x4 * b_ptr = (const block_q4_0x4 *) vx;\n\n        for (int c = 0; c &lt; nc; c += ncols_interleaved) {\n            const block_q8_0 * a_ptr = (const block_q8_0 *) vy;\n            float32x4_t acc = vdupq_n_f32(0);\n            for (int b = 0; b &lt; nb; b++) {\n                //\u53d6\u6570\u8fc7\u7a0b\n                int8x16_t b0 = vld1q_s8((const int8_t *) b_ptr-&gt;qs);\n                int8x16_t b1 = vld1q_s8((const int8_t *) b_ptr-&gt;qs + 16);\n                int8x16_t b2 = vld1q_s8((const int8_t *) b_ptr-&gt;qs + 32);\n                int8x16_t b3 = vld1q_s8((const int8_t *) b_ptr-&gt;qs + 48);\n                float16x4_t bd = vld1_f16((const __fp16 *) b_ptr-&gt;d);//\u53d6\u51fa4\u4e2af16\n\n\n                int8x16_t a0 = (int8x16_t) vld1q_dup_s64((const int64_t *) a_ptr-&gt;qs);\n                int8x16_t a1 = (int8x16_t) vld1q_dup_s64((const int64_t *) a_ptr-&gt;qs + 1);\n                int8x16_t a2 = (int8x16_t) vld1q_dup_s64((const int64_t *) a_ptr-&gt;qs + 2);\n                int8x16_t a3 = (int8x16_t) vld1q_dup_s64((const int64_t *) a_ptr-&gt;qs + 3);\n                float16x4_t ad = vld1_dup_f16((const __fp16 *) &amp;a_ptr-&gt;d);//\u53d6\u51fa1\u4e2af16,\u590d\u52364\u6b21\n\n                int32x4_t ret0 = vdupq_n_s32(0);\n                int32x4_t ret1 = vdupq_n_s32(0);\n\n                //\u8ba1\u7b97\u8fc7\u7a0b\n                ret0 = vdotq_s32(ret0, b0 &lt;&lt; 4, a0);\n                ret1 = vdotq_s32(ret1, b1 &lt;&lt; 4, a0);\n                ret0 = vdotq_s32(ret0, b2 &lt;&lt; 4, a1);\n                ret1 = vdotq_s32(ret1, b3 &lt;&lt; 4, a1);\n\n                ret0 = vdotq_s32(ret0, b0 &amp; 0xf0U, a2);\n                ret1 = vdotq_s32(ret1, b1 &amp; 0xf0U, a2);\n                ret0 = vdotq_s32(ret0, b2 &amp; 0xf0U, a3);\n                ret1 = vdotq_s32(ret1, b3 &amp; 0xf0U, a3);\n\n                //\u6c34\u5e73\u76f8\u52a0\n                int32x4_t ret = vpaddq_s32(ret0, ret1);\n\n                //\u5229\u7528scale\u5c06int32\u8f6c\u6362\u4e3af32\n                acc = vfmaq_f32(acc, vcvtq_n_f32_s32(ret, 4),\n                        vmulq_f32(vcvt_f32_f16(ad), vcvt_f32_f16(bd)));//\u8fd9\u91cc\u662f\u5148\u8ba1\u7b97\u4e864\u4e2af16\u76f8\u4e58\uff0c\u518d\u8ba1\u7b97\u548cint32\u6570\u636e\u7684\u76f8\u4e58\n                a_ptr++;\n                b_ptr++;\n            }\n            //\u50a8\u5b58\u8fc7\u7a0b\n            vst1q_f32(s, acc);\n            s += ncols_interleaved;\n        }\n        return;\n    }\n#endif // #if ! ((defined(_MSC_VER)) &amp;&amp; ! defined(__clang__)) &amp;&amp; defined(__aarch64__) &amp;&amp; defined(__ARM_NEON) &amp;&amp; defined(__ARM_FEATURE_DOTPROD)\n</code></pre>"},{"location":"Llama/%E5%90%AC%E4%BC%9A/","title":"\u542c\u4f1a","text":"<p>\u542c\u53d6\u771f\u950b\u7684\u8bb2\u5ea7</p> <p>\u5f55\u5236\uff1a\u5927\u6a21\u578b\u4f18\u5316\u57fa\u7840\u5206\u4eab \u5f55\u5236\u6587\u4ef6\uff1ahttps://meeting.tencent.com/crm/l5oMQpeD76</p> <p>\u603b\u7ed3\u91cd\u70b9\uff1a gemm\u5206\u5757\u8ba1\u7b97 \u901a\u4fe1\u91cf\u8ba1\u7b97 \u57fa\u7840\u6982\u5ff5\u8865\u5145</p> <p>https://www.armcvai.cn/2021-03-01/pytorch-structure-process.html</p> <p>https://zhuanlan.zhihu.com/p/617133971</p>"},{"location":"Llama/%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%E8%AE%BE%E5%A4%87%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81sve%E7%89%B9%E6%80%A7/","title":"\u5982\u4f55\u68c0\u6d4b\u8bbe\u5907\u662f\u5426\u652f\u6301sve\u7279\u6027","text":"<p>\u672c\u6587\u8bb0\u5f55\u4e86\u5982\u4f55\u68c0\u6d4b\u8bbe\u5907\u662f\u5426\u652f\u6301sve/sve2\u7279\u6027</p>"},{"location":"Llama/%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%E8%AE%BE%E5%A4%87%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81sve%E7%89%B9%E6%80%A7/#_1","title":"\u5b98\u65b9\u7684\u4e00\u4e2a\u9a8c\u8bc1\u4ee3\u7801","text":""},{"location":"Llama/%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%E8%AE%BE%E5%A4%87%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81sve%E7%89%B9%E6%80%A7/#1-svesve","title":"1. \u901a\u8fc7\u8bfb\u53d6sve\u5411\u91cf\u957f\u5ea6\u6765\u5224\u65ad\u662f\u5426\u652f\u6301sve","text":"<p>\u7f51\u5740</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;arm_sve.h&gt;\n\n#ifndef __ARM_FEATURE_SVE\n#warning \"Make sure to compile for SVE!\"\n#endif\n\nint main()\n{\n    printf(\"SVE vector length is: %ld bytes\\n\", svcntb());\n}\n</code></pre>"},{"location":"Llama/%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%E8%AE%BE%E5%A4%87%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81sve%E7%89%B9%E6%80%A7/#2-hwcaps","title":"2. \u901a\u8fc7hwcaps\u5411\u5185\u6838\u7a7a\u95f4\u7684\u4f20\u9012\u53c2\u6570","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;sys/auxv.h&gt;\n\n#ifndef HWCAP_SVE\n#define HWCAP_SVE (1 &lt;&lt; 22)  \n#endif\n\n#ifndef HWCAP2_SVE2\n#define HWCAP2_SVE2 (1 &lt;&lt; 1)  \n#endif\n\nint main() {\n    uint64_t hwcap = getauxval(AT_HWCAP);\n    uint64_t hwcap2 = getauxval(AT_HWCAP2);\n\n    if (hwcap &amp; HWCAP_SVE)\n        printf(\"SVE is supported!\\n\");\n    else\n        printf(\"SVE is NOT supported.\\n\");\n\n    if (hwcap2 &amp; HWCAP2_SVE2)\n        printf(\"SVE2 is supported!\\n\");\n    else\n        printf(\"SVE2 is NOT supported.\\n\");\n\n    return 0;\n}\n</code></pre> <p>\u53c2\u8003cpufeature hwcaps <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;sys/auxv.h&gt;\n\n// \u5b9a\u4e49\u6240\u6709 HWCAP \u7279\u6027\n#define HWCAP_FP        (1 &lt;&lt; 0)\n#define HWCAP_ASIMD     (1 &lt;&lt; 1)\n#define HWCAP_EVTSTRM       (1 &lt;&lt; 2)\n#define HWCAP_AES       (1 &lt;&lt; 3)\n#define HWCAP_PMULL     (1 &lt;&lt; 4)\n#define HWCAP_SHA1      (1 &lt;&lt; 5)\n#define HWCAP_SHA2      (1 &lt;&lt; 6)\n#define HWCAP_CRC32     (1 &lt;&lt; 7)\n#define HWCAP_ATOMICS       (1 &lt;&lt; 8)\n#define HWCAP_FPHP      (1 &lt;&lt; 9)\n#define HWCAP_ASIMDHP       (1 &lt;&lt; 10)\n#define HWCAP_CPUID     (1 &lt;&lt; 11)\n#define HWCAP_ASIMDRDM      (1 &lt;&lt; 12)\n#define HWCAP_JSCVT     (1 &lt;&lt; 13)\n#define HWCAP_FCMA      (1 &lt;&lt; 14)\n#define HWCAP_LRCPC     (1 &lt;&lt; 15)\n#define HWCAP_DCPOP     (1 &lt;&lt; 16)\n#define HWCAP_SHA3      (1 &lt;&lt; 17)\n#define HWCAP_SM3       (1 &lt;&lt; 18)\n#define HWCAP_SM4       (1 &lt;&lt; 19)\n#define HWCAP_ASIMDDP       (1 &lt;&lt; 20)\n#define HWCAP_SHA512        (1 &lt;&lt; 21)\n#define HWCAP_SVE       (1 &lt;&lt; 22)\n#define HWCAP_ASIMDFHM      (1 &lt;&lt; 23)\n#define HWCAP_DIT       (1 &lt;&lt; 24)\n#define HWCAP_USCAT     (1 &lt;&lt; 25)\n#define HWCAP_ILRCPC        (1 &lt;&lt; 26)\n#define HWCAP_FLAGM     (1 &lt;&lt; 27)\n#define HWCAP_SSBS      (1 &lt;&lt; 28)\n#define HWCAP_SB        (1 &lt;&lt; 29)\n#define HWCAP_PACA      (1 &lt;&lt; 30)\n#define HWCAP_PACG      (1UL &lt;&lt; 31)\n#define HWCAP_GCS       (1UL &lt;&lt; 32)\n#define HWCAP_CMPBR     (1UL &lt;&lt; 33)\n#define HWCAP_FPRCVT        (1UL &lt;&lt; 34)\n#define HWCAP_F8MM8     (1UL &lt;&lt; 35)\n#define HWCAP_F8MM4     (1UL &lt;&lt; 36)\n#define HWCAP_SVE_F16MM     (1UL &lt;&lt; 37)\n#define HWCAP_SVE_ELTPERM   (1UL &lt;&lt; 38)\n#define HWCAP_SVE_AES2      (1UL &lt;&lt; 39)\n#define HWCAP_SVE_BFSCALE   (1UL &lt;&lt; 40)\n#define HWCAP_SVE2P2        (1UL &lt;&lt; 41)\n#define HWCAP_SME2P2        (1UL &lt;&lt; 42)\n#define HWCAP_SME_SBITPERM  (1UL &lt;&lt; 43)\n#define HWCAP_SME_AES       (1UL &lt;&lt; 44)\n#define HWCAP_SME_SFEXPA    (1UL &lt;&lt; 45)\n#define HWCAP_SME_STMOP     (1UL &lt;&lt; 46)\n#define HWCAP_SME_SMOP4     (1UL &lt;&lt; 47)\n\n// \u5b9a\u4e49\u6240\u6709 HWCAP2 \u7279\u6027\n#define HWCAP2_DCPODP       (1 &lt;&lt; 0)\n#define HWCAP2_SVE2     (1 &lt;&lt; 1)\n#define HWCAP2_SVEAES       (1 &lt;&lt; 2)\n#define HWCAP2_SVEPMULL     (1 &lt;&lt; 3)\n#define HWCAP2_SVEBITPERM   (1 &lt;&lt; 4)\n#define HWCAP2_SVESHA3      (1 &lt;&lt; 5)\n#define HWCAP2_SVESM4       (1 &lt;&lt; 6)\n#define HWCAP2_FLAGM2       (1 &lt;&lt; 7)\n#define HWCAP2_FRINT        (1 &lt;&lt; 8)\n#define HWCAP2_SVEI8MM      (1 &lt;&lt; 9)\n#define HWCAP2_SVEF32MM     (1 &lt;&lt; 10)\n#define HWCAP2_SVEF64MM     (1 &lt;&lt; 11)\n#define HWCAP2_SVEBF16      (1 &lt;&lt; 12)\n#define HWCAP2_I8MM     (1 &lt;&lt; 13)\n#define HWCAP2_BF16     (1 &lt;&lt; 14)\n#define HWCAP2_DGH      (1 &lt;&lt; 15)\n#define HWCAP2_RNG      (1 &lt;&lt; 16)\n#define HWCAP2_BTI      (1 &lt;&lt; 17)\n#define HWCAP2_MTE      (1 &lt;&lt; 18)\n#define HWCAP2_ECV      (1 &lt;&lt; 19)\n#define HWCAP2_AFP      (1 &lt;&lt; 20)\n#define HWCAP2_RPRES        (1 &lt;&lt; 21)\n#define HWCAP2_MTE3     (1 &lt;&lt; 22)\n#define HWCAP2_SME      (1 &lt;&lt; 23)\n#define HWCAP2_SME_I16I64   (1 &lt;&lt; 24)\n#define HWCAP2_SME_F64F64   (1 &lt;&lt; 25)\n#define HWCAP2_SME_I8I32    (1 &lt;&lt; 26)\n#define HWCAP2_SME_F16F32   (1 &lt;&lt; 27)\n#define HWCAP2_SME_B16F32   (1 &lt;&lt; 28)\n#define HWCAP2_SME_F32F32   (1 &lt;&lt; 29)\n#define HWCAP2_SME_FA64     (1 &lt;&lt; 30)\n#define HWCAP2_WFXT     (1UL &lt;&lt; 31)\n#define HWCAP2_EBF16        (1UL &lt;&lt; 32)\n#define HWCAP2_SVE_EBF16    (1UL &lt;&lt; 33)\n#define HWCAP2_CSSC     (1UL &lt;&lt; 34)\n#define HWCAP2_RPRFM        (1UL &lt;&lt; 35)\n#define HWCAP2_SVE2P1       (1UL &lt;&lt; 36)\n#define HWCAP2_SME2     (1UL &lt;&lt; 37)\n#define HWCAP2_SME2P1       (1UL &lt;&lt; 38)\n#define HWCAP2_SME_I16I32   (1UL &lt;&lt; 39)\n#define HWCAP2_SME_BI32I32  (1UL &lt;&lt; 40)\n#define HWCAP2_SME_B16B16   (1UL &lt;&lt; 41)\n#define HWCAP2_SME_F16F16   (1UL &lt;&lt; 42)\n#define HWCAP2_MOPS     (1UL &lt;&lt; 43)\n#define HWCAP2_HBC      (1UL &lt;&lt; 44)\n#define HWCAP2_SVE_B16B16   (1UL &lt;&lt; 45)\n#define HWCAP2_LRCPC3       (1UL &lt;&lt; 46)\n#define HWCAP2_LSE128       (1UL &lt;&lt; 47)\n#define HWCAP2_FPMR     (1UL &lt;&lt; 48)\n#define HWCAP2_LUT      (1UL &lt;&lt; 49)\n#define HWCAP2_FAMINMAX     (1UL &lt;&lt; 50)\n#define HWCAP2_F8CVT        (1UL &lt;&lt; 51)\n#define HWCAP2_F8FMA        (1UL &lt;&lt; 52)\n#define HWCAP2_F8DP4        (1UL &lt;&lt; 53)\n#define HWCAP2_F8DP2        (1UL &lt;&lt; 54)\n#define HWCAP2_F8E4M3       (1UL &lt;&lt; 55)\n#define HWCAP2_F8E5M2       (1UL &lt;&lt; 56)\n#define HWCAP2_SME_LUTV2    (1UL &lt;&lt; 57)\n#define HWCAP2_SME_F8F16    (1UL &lt;&lt; 58)\n#define HWCAP2_SME_F8F32    (1UL &lt;&lt; 59)\n#define HWCAP2_SME_SF8FMA   (1UL &lt;&lt; 60)\n#define HWCAP2_SME_SF8DP4   (1UL &lt;&lt; 61)\n#define HWCAP2_SME_SF8DP2   (1UL &lt;&lt; 62)\n#define HWCAP2_POE      (1UL &lt;&lt; 63)\n\n// \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u5173\u8054\u7279\u6027\u5b8f\u548c\u7279\u6027\u540d\u79f0\ntypedef struct {\n    uint64_t flag;\n    const char *name;\n    int is_hwcap2;  // \u6807\u8bb0\u662f\u5426\u4e3a HWCAP2 \u7279\u6027\n} Feature;\n\n// \u5b9a\u4e49 HWCAP \u7279\u6027\u6570\u7ec4\nFeature hwcap_features[] = {\n    {HWCAP_FP, \"FP\", 0},\n    {HWCAP_ASIMD, \"ASIMD\", 0},\n    {HWCAP_EVTSTRM, \"EVTSTRM\", 0},\n    {HWCAP_AES, \"AES\", 0},\n    {HWCAP_PMULL, \"PMULL\", 0},\n    {HWCAP_SHA1, \"SHA1\", 0},\n    {HWCAP_SHA2, \"SHA2\", 0},\n    {HWCAP_CRC32, \"CRC32\", 0},\n    {HWCAP_ATOMICS, \"ATOMICS\", 0},\n    {HWCAP_FPHP, \"FPHP\", 0},\n    // \u53ef\u4ee5\u7ee7\u7eed\u6dfb\u52a0\u5176\u4ed6 HWCAP \u7279\u6027\n};\n\n// \u5b9a\u4e49 HWCAP2 \u7279\u6027\u6570\u7ec4\nFeature hwcap2_features[] = {\n    {HWCAP2_DCPODP, \"DCPODP\", 1},\n    {HWCAP2_SVE2, \"SVE2\", 1},\n    {HWCAP2_SVEAES, \"SVEAES\", 1},\n    {HWCAP2_SVEPMULL, \"SVEPMULL\", 1},\n    {HWCAP2_SVEBITPERM, \"SVEBITPERM\", 1},\n    {HWCAP2_SVESHA3, \"SVESHA3\", 1},\n    {HWCAP2_SVESM4, \"SVESM4\", 1},\n    {HWCAP2_FLAGM2, \"FLAGM2\", 1},\n    {HWCAP2_FRINT, \"FRINT\", 1},\n    {HWCAP2_SVEI8MM, \"SVEI8MM\", 1},\n    // \u53ef\u4ee5\u7ee7\u7eed\u6dfb\u52a0\u5176\u4ed6 HWCAP2 \u7279\u6027\n};\n\nint main() {\n    uint64_t hwcap = getauxval(AT_HWCAP);\n    uint64_t hwcap2 = getauxval(AT_HWCAP2);\n\n    // \u68c0\u67e5 HWCAP \u7279\u6027\n    for (size_t i = 0; i &lt; sizeof(hwcap_features) / sizeof(hwcap_features[0]); i++) {\n        if (hwcap &amp; hwcap_features[i].flag) {\n            printf(\"%s\\n\", hwcap_features[i].name);\n        }\n    }\n\n    // \u68c0\u67e5 HWCAP2 \u7279\u6027\n    for (size_t i = 0; i &lt; sizeof(hwcap2_features) / sizeof(hwcap2_features[0]); i++) {\n        if (hwcap2 &amp; hwcap2_features[i].flag) {\n            printf(\"%s\\n\", hwcap2_features[i].name);\n        }\n    }\n\n    return 0;\n}\n</code></pre></p>"},{"location":"Llama/%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%E8%AE%BE%E5%A4%87%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81sve%E7%89%B9%E6%80%A7/#3-arm-sve2","title":"3. arm sve2\u6559\u7a0b","text":"<p>\u6559\u7a0b\u5730\u5740 \u6e90\u7801</p>"},{"location":"Llama/%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%E8%AE%BE%E5%A4%87%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81sve%E7%89%B9%E6%80%A7/#4","title":"4. \u5de5\u5177\u5730\u5740","text":"<p>https://gitee.com/kuoihao/testcode/repository/archive/master.zip</p> <pre><code>git clone https://gitee.com/kuoihao/testcode.git\n</code></pre>"},{"location":"Llama/%E5%AD%A6%E4%B9%A0SVE2%E6%8C%87%E4%BB%A4%E5%8A%A0%E9%80%9F/","title":"\u5b66\u4e60SVE2\u6307\u4ee4\u52a0\u901f","text":"<p>\u770b\u8fd9\u4e2aarm\u5b98\u65b9\u7684\u7f51\u7ad9</p> <p>\u6ce8\u610f\u53ef\u4ee5\u4f7f\u7528\u7b5b\u9009\u9879\u6765\u7b5b\u9009\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u548c\u5206\u7ec4\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u5f88\u591a\u627e\u51fd\u6570\u7684\u8fc7\u7a0b</p> <p>\u53e6\u5916\u6ce8\u610fsve2\u6307\u4ee4\u7684\u6570\u636e\u5904\u7406\u65b9\u5f0f\uff0c\u548cneon\u6709\u4e0d\u540c\uff0c\u5b58\u653e\u4f4d\u7f6e\u8981\u6ce8\u610f\uff01</p>"},{"location":"Llama/%E5%AD%A6%E4%B9%A0neon%E6%8C%87%E4%BB%A4%E5%8A%A0%E9%80%9F/","title":"\u5b66\u4e60neon\u6307\u4ee4\u52a0\u901f","text":"<p>sve2\u4f5c\u4e3aneon\u7684\u7ee7\u4efb\u8005\uff0c\u4e3a\u4e86\u5b66\u4e60sve2\uff0c\u6709\u5fc5\u8981\u5148\u770b\u4e00\u4e0bneon</p>"},{"location":"Llama/%E5%AD%A6%E4%B9%A0neon%E6%8C%87%E4%BB%A4%E5%8A%A0%E9%80%9F/#_1","title":"\u73b0\u5b9e\u72b6\u51b5","text":"<p>alu\u548cdatapath\u4f4d\u5bbd\u4e00\u822c\u662f\u673a\u5668\u5b57\u957f\uff0c\u4f46\u662f\u6570\u636e\u5904\u7406\u6307\u4ee4\u5904\u7406\u6570\u636e\u957f\u5ea6\u5c0f\u4e8e\u673a\u5668\u5b57\u957f\uff0csisd\u6d6a\u8d39\u4e86\u4f4d\u5bbd\u548c\u8ba1\u7b97\u8d44\u6e90\u3002</p>"},{"location":"Llama/%E5%AD%A6%E4%B9%A0neon%E6%8C%87%E4%BB%A4%E5%8A%A0%E9%80%9F/#_2","title":"\u52a0\u901f\u539f\u7406","text":"<p>\u4f7f\u7528simd\uff0c\u5145\u5206\u5229\u7528\u786c\u4ef6\uff0c\u5e76\u884c\u8ba1\u7b97\u591a\u6761\u6570\u636e\uff0c\u83b7\u5f97\u6210\u500d\u63d0\u5347</p>"},{"location":"Llama/%E5%AD%A6%E4%B9%A0neon%E6%8C%87%E4%BB%A4%E5%8A%A0%E9%80%9F/#neon","title":"\u4f7f\u7528neon\u6559\u7a0b","text":""},{"location":"Llama/%E6%94%B6%E9%9B%86%E5%88%B0%E7%9A%84%E8%B5%84%E6%96%99/","title":"\u6536\u96c6\u5230\u7684\u8d44\u6599","text":"<p>arm\u4f18\u5316\u6536\u96c6\u5230\u7684\u8d44\u6599</p> <p>\u4e00\u4efdsve\u7684\u5927\u4f53\u4ecb\u7ecd</p> <p>arm\u5b98\u65b9sve\u51fd\u6570\u67e5\u8be2\u7f51\u7ad9</p> <p>\u540c\u6837\u7684\u6307\u4ee4\u53c2\u8003</p> <p>\u4ee5\u53ca\u6307\u4ee4\u53c2\u80032</p> <p>\u4ee5\u53ca\u6307\u4ee4\u53c2\u80033</p> <p>\u4e00\u4efdarm\u7684\u9ad8\u6027\u80fd\u8bfe\u7a0b\u6587\u6863</p> <p>arm\u5173\u4e8ecortex2 sve\u4ecb\u7ecd</p> <p>[\u4ecb\u7ecd2]https://developer.arm.com/documentation/101803/0201/Activity-Monitors-Extension-support?lang=en</p> <p>arm\u5b98\u65b9acle sve \u624b\u518c(Arm_100987_0000_06_en)</p> <p>sve\u8bba\u6587</p> <p>arm\u5f00\u53d1\u793e\u533a\u7684\u95ee\u7b54</p> <ol> <li>https://community.arm.com/support-forums/f/high-performance-computing-forum/53949/take-full-advantage-of-sve-vector-length-agnostic-approach?ReplySortBy=CreatedDate&amp;ReplySortOrder=Ascending</li> <li>https://community.arm.com/support-forums/f/compilers-and-libraries-forum/55789/how-to-auto-vectorize-fp16-loop-under-arm-sve</li> <li>https://community.arm.com/support-forums/f/architectures-and-processors-forum/56650/pack-high-bit-of-every-byte-in-arm-neon-for-64-bytes-like-avx512-vpmovb2m</li> <li></li> </ol>"},{"location":"Llama/%E8%A7%82%E5%AF%9F%E5%8F%AF%E8%83%BD%E7%9A%84%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91/","title":"\u89c2\u5bdf\u53ef\u80fd\u7684\u7814\u7a76\u65b9\u5411","text":"<p>https://github.com/ggml-org/llama.cpp/issues/9827</p> <p>// optimization 1 // A // [1,2] // [3,4]</p> <p>// A' // [1,3] // [2,4]</p> <p>// a[1,3,2,4] // a[A(0,0),A(1,0),A(0,1),A(1,1)]</p> <p>//X\uff08p\uff09\u662f\u4e00\u6b21\u53d6A'\u7684\u4e00\u884c\uff08\u5373\u662f\u53d6A\u7684\u4e00\u5217\uff09\u7684\u59cb\u5730\u5740\uff0c\u6b65\u957flda\u5c31\u662fA\u7684\u884c\u6570\uff0cA'\u7684\u5217\u6570 //\u6b64\u5904\u8ba1\u7b97\u4e86A'*B //\u6b64\u5904\u5de7\u5999\u7684\u8f6c\u5316\u539f\u6765\u7684\u5217\u4e3b\u5e8f\u5b58\u50a8\u53d8\u4e3a\u884c\u4e3b\u5e8f\u5b58\u50a8\u7684\u8ba1\u7b97\uff0c\u77e9\u9635\u8f6c\u7f6e\u53d6\u5f97\u4e00\u884c\u5bf9\u5e94\u539f\u6765\u7684\u4e00\u5217\uff0c\u53e6\u4e00\u4e2a\u77e9\u9635\u53d6\u4e00\u5217\uff0c\u90fd\u5bf9\u5e94\u7740\u8ba1\u7b97\u673a\u4e2d\u7684\u884c\u4e3b\u5e8f\u5b58\u50a8</p> <p>//optimization 2 //\u5229\u7528\u5c40\u90e8\u6027\u539f\u7406,\u5c3d\u53ef\u80fd\u7684\u8ba1\u7b97\u66f4\u591a\u7684\u7ed3\u679c</p> <p>//optimization 1x4_3 //\u66f4\u6539\u5229\u7528\u5c40\u90e8\u6027\u539f\u7406\u7684\u5f62\u5f0f,\u6027\u8d28\u6ca1\u6709\u53d1\u751f\u6539\u53d8</p> <p>//optimization 1x4_4 //\u53d6\u6d88\u4e86AddDot\u51fd\u6570\u7684\u4f7f\u7528,\u6027\u8d28\u6ca1\u6709\u53d1\u751f\u6539\u53d8</p> <p>//optimization 1x4_5 //\u5c06\u539f\u6765\u56db\u4e2a\u72ec\u7acb\u7684\u5faa\u73af\u8ba1\u7b97\u5408\u5e76\u4e3a1\u4e2a\uff0c\u5229\u7528\u4e86\u5c40\u90e8\u6027\u539f\u7406 //\u8fd8\u662f\u76f8\u540c\u7684\u5229\u7528\u5c40\u90e8\u6027\u539f\u7406\uff0c\u540c2\u5904\uff0c\u4f46\u662f\u7531\u51fd\u6570\u53d8\u4e3a\u7edf\u4e00\u8ba1\u7b97\uff0c\u66f4\u5145\u5206\u5730\u5229\u7528\u4e86\u5c40\u90e8\u6027\u539f\u7406 //\u4f8b\u5982A(0,p\uff09\uff0c\u5373A\u7684P\u5217\uff0cA'\u7684P\u884c\u53ef\u4ee5\u590d\u7528\u56db\u6b21</p> <p>//optimization 1x4_6 //\u4f7f\u7528\u6307\u9488\u4ee3\u66ffA\u77e9\u9635\u7684\u9996\u5730\u5740 //\u4f7f\u7528\u53d8\u91cf\u4ee3\u66ff\u539f\u6709\u7684C\u77e9\u9635\u7684\u503c\uff0c\u53ea\u5728\u6700\u540e\u4fee\u6539\u4e00\u6b21 //\u8fd9\u4e00\u6b65\u83b7\u5f97\u4e86\u53ef\u89c2\u7684\u6027\u80fd\u63d0\u5347</p> <p>//optimization 1x4_7 //\u4f7f\u7528\u6307\u9488\u4ee3\u66ff\u539f\u6709\u7684B\u77e9\u9635\u7684\u503c\uff0c\u8fdb\u4e00\u6b65\u964d\u4f4e\u4e86\u53d6B\u77e9\u9635\u5730\u5740\u7684\u6b21\u6570 //\u8fd9\u4e00\u6b65\u5728\u8f83\u5927\u7684\u77e9\u9635\u83b7\u5f97\u4e86\u63d0\u5347</p> <p>//optimization 1x4_8 //\u5c06\u539f\u6709\u7684\u56db\u6b21\u5faa\u73af\u5c55\u5f00\uff0c\u4f01\u56fe\u5229\u7528\u5c40\u90e8\u6027\u539f\u7406 //\u5728\u6027\u80fd\u4e0a\u6709\u4e0b\u964d\uff0c\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u7f16\u8bd1\u5668\u5728\u4e4b\u524d\u505a\u4e86\u4e0d\u4e3a\u6211\u4eec\u6240\u77e5\u7684\u4f18\u5316</p> <p>//optimization 1x4_9 //\u4f7f\u7528\u95f4\u63a5\u5bfb\u5740\uff0c\u4e00\u6b21\u5faa\u73af\u53ea\u4f7f\u7528\u4e00\u4e2aB\u77e9\u9635\u7684\u5730\u5740\uff0c\u53ea\u5728\u56db\u6b21\u8ba1\u7b97\u4e4b\u540e\u518d\u4fee\u6539\u4f7f\u7528\u7684B\u77e9\u9635\u7684\u5730\u5740\uff0c\u51cf\u5c11\u8ba1\u7b97\u6b21\u6570 //\u7f16\u8bd1\u5668\u4f3c\u4e4e\u542b\u6709\u8fd9\u79cd\u4f18\u5316\uff0c\u6ca1\u6709\u8f83\u5927\u63d0\u5347</p>"},{"location":"Llama/%E8%BF%81%E7%A7%BBneon%E5%88%B0sve/","title":"\u8fc1\u79fbneon\u5230sve","text":"<p>\u7ffb\u8bd1\u539f\u6587 \u8fc1\u79fb\u4f60\u7684neon\u4ee3\u7801\u5230sve</p> <p>\u8fc1\u79fb\u4ee3\u7801\u7684\u8fc7\u7a0b\u7565\u6709\u4e0d\u540c\uff0c\u8fd9\u4e2a\u53d6\u51b3\u4e8e\u4ee3\u7801\u662f\u5426\u4f7f\u7528\u9ad8\u7ea7\u8bed\u8a00\uff0c\u4f8b\u5982c/c++\u6216\u8005Fortran\uff0c\u4ea6\u6216\u8005\u4f60\u7684\u4ee3\u7801\u4f7f\u7528\u6c47\u7f16 \u4e3a\u4e86\u5c06c/c++\uff0cFortran\u8fd9\u6837\u7684\u9ad8\u7ea7\u8bed\u8a00\u8fc1\u79fb\u5230SVE VLA\u6a21\u5f0f(Vector Length Agnostic\u77e2\u91cf\u957f\u5ea6\u4e0d\u53ef\u77e5)\uff0c\u4f60\u9700\u8981\uff1a \u66f4\u65b0\u4f60\u7684\u7f16\u8bd1\u9009\u9879(\u5305\u62ec\u81ea\u52a8\u5411\u91cf\u5316\u9009\u9879) \u5c3d\u53ef\u80fd\u53c2\u8003sve\u89c4\u8303\uff0c\u4f7f\u7528sve\u5185\u5efa\u51fd\u6570\u4ee3\u66ffneon\u5185\u5efa\u51fd\u6570 \u5c06\u4ee3\u7801\u548c\u6570\u5b66\u5e93\u7684sve\u53d8\u4f53\u8fde\u63a5</p> <p>\u5982\u679c\u4f60\u6b63\u5728\u5199vla\u6c47\u7f16\uff0c\u4f60\u5e94\u8be5 \u66f4\u65b0\u4f60\u7684\u7f16\u8bd1\u9009\u9879(\u5305\u62ec\u81ea\u52a8\u5411\u91cf\u5316\u9009\u9879) \u5c3d\u53ef\u80fd\u53c2\u8003\u624b\u518c\u4f7f\u7528sve\u91cd\u5199\u4f60\u7684\u4ee3\u7801\u5e76\u5c06\u60a8\u7684\u4ee3\u7801\u548c\u6570\u5b66\u5e93\u7684sve\u53d8\u4f53\u94fe\u63a5</p> <p>\u4ee5\u4e0b\u793a\u4f8b\u5982\u4f55\u5c06\u4f18\u5316\u597d\u7684neon\u4ee3\u7801\uff08c\u8bed\u8a00\u7f16\u5199\uff09\u4f7f\u7528acle sve\u91cd\u5199\u4e3a\u4f18\u5316\u7684sve\u4ee3\u7801</p> <p>\u793a\u4f8b\u4e0d\u5305\u542b\u91cd\u5199neon\u4f18\u5316\u7684\u6c47\u7f16</p> <p>\u793a\u4f8b\u4e00\uff0c\u4f7f\u7528\u5185\u5efa\u51fd\u6570\u91cd\u5199\u7b80\u5355\u77e9\u9635\u4e58\u6cd5 \u8fd9\u4e2a\u793a\u4f8b\u4f7f\u7528\u4e86neon\u5185\u5efa\u51fd\u6570\u5b9e\u73b0\u4e86\u4e00\u4e9bc\u51fd\u6570\u3002\u6240\u9009\u793a\u4f8b\u6ca1\u6709\u5c55\u793a\u5e94\u7528\u7684\u5168\u90e8\u590d\u6742\u6027\uff0c\u4f46\u8bf4\u660e\u4e86\u5185\u5efa\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u5e76\u4e14\u662f\u66f4\u590d\u6742\u4ee3\u7801\u7684\u8d77\u70b9\uff0c\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528sve\u5185\u5efa\u51fd\u6570\u91cd\u5199\u4ee3\u7801</p> <p>\u77e9\u9635\u4e58\u6cd5\u662f\u4e00\u79cd\u5728\u6570\u636e\u5bc6\u96c6\u578b\u5e94\u7528\u4e2d\u7684\u64cd\u4f5c\u5e76\u4e14\u7531\u4e00\u7ec4\u7b80\u5355\u91cd\u590d\u7684\u6570\u5b66\u64cd\u4f5c\u7ec4\u6210</p> <p>\u77e9\u9635\u4e58\u6cd5\u56fe Figure 1. Matrix multiplication diagram \u77e9\u9635\u4e58\u6cd5\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u53d6\u5f97A\u77e9\u9635\u4e2d\u7684\u4e00\u884c</li> <li>\u5bf9\u8fd9\u884c\u548c\u77e9\u9635B\u7684\u4e00\u5217\u8fdb\u884c\u70b9\u4e58\u64cd\u4f5c</li> <li>\u5c06\u7ed3\u679c\u50a8\u5b58\u5230C\u77e9\u9635\u5bf9\u5e94\u7684\u884c\u548c\u5217\u4e2d \u5bf9\u4e8e32\u4f4d\u6d6e\u70b9\u77e9\u9635\uff0c\u4e58\u6cd5\u53ef\u4ee5\u8868\u793a\u4e3a <pre><code>void matrix_multiply_c(float32_t *A, float32_t *B, float32_t *C, uint32_t n, uint32_t m, uint32_t k) {\n    for (int i_idx=0; i_idx &lt; n; i_idx++) {\n        for (int j_idx=0; j_idx &lt; m; j_idx++) {\n            C[n*j_idx + i_idx] = 0;\n            for (int k_idx=0; k_idx &lt; k; k_idx++) {\n                C[n*j_idx + i_idx] += A[n*k_idx + i_idx]*B[k*j_idx + k_idx];\n            }\n        }\n    }\n}\n</code></pre> That is, an n x m matrix M, is represented as an array M_array, where Mij = M_array[nj + i]. \u5047\u8bbe\u77e9\u9635\u4f7f\u7528\u5217\u4e3b\u5e8f\u5b58\u50a8\uff0c\u610f\u5473\u7740nXm\u7684\u77e9\u9635M,\u88ab\u8868\u793a\u4e3a\u6570\u7ec4M\uff08M_array\uff09\uff0cMij\u88ab\u6620\u5c04\u5230M_array[nj+i]\u3002 !!!\u7406\u89e3\uff1a\u5217\u4e3b\u5e8f\uff0c\u5728M_array\u4e2d\u5b58\u50a8\u7684\u662f\u77e9\u9635\u7684\u4e00\u5217\u4e00\u5217\uff0c\uff081,2\uff09\uff08\u5b9e\u9645\u4e0a\u662f\u7b2c2\u884c\u7b2c3\u5217\u5462\uff09\u88ab\u6620\u5c04\u5230\uff082\u4e2a\u5217\u5373n*j\u52a0\u4e0a1\u4e2a\u5143\u7d20i\u7684\u4f4d\u7f6e\u4e0a\uff09</li> </ol> <p>This code is suboptimal, because it does not make full use of Neon. Intrinsics can be used to improve it. \u8fd9\u6bb5\u4ee3\u4e70\u4f18\u5316\u6548\u7387\u4e0d\u9ad8\uff0cyin wei\uff0c\u56e0\u4e3a\u4ed6\u6ca1\u6709\u5145\u5206\u5229\u7528neon,\u53ef\u4ee5\u4f7f\u7528\u5185\u8054\u51fd\u6570\u6539\u8fdb\u5b83</p> <p>\u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528neon\u5185\u5efa\u51fd\u6570\u8ba1\u7b97\u4e24\u4e2a4X4\u77e9\u9635\u76f8\u4e58\uff0c\u56e0\u4e3a\u6570\u636e\u91cf\u6bd4\u8f83\u5c0f\u4e14\u56fa\u5b9a\uff0c\u6240\u6709\u8fd9\u4e9b\u503c\u53ef\u4ee5\u540c\u65f6\u653e\u5165\u5bc4\u5b58\u5668\u3002\u8fd9\u4e2a\u5faa\u73af\u53ef\u4ee5\u5b8c\u5168\u5c55\u5f00 <pre><code>void matrix_multiply_4x4_neon(const float32_t *A, const float32_t *B, float32_t *C) {\n    // these are the columns A\n    float32x4_t A0;\n    float32x4_t A1;\n    float32x4_t A2;\n    float32x4_t A3;\n\n    // these are the columns B\n    float32x4_t B0;\n    float32x4_t B1;\n    float32x4_t B2;\n    float32x4_t B3;\n\n    // these are the columns C\n    float32x4_t C0;\n    float32x4_t C1;\n    float32x4_t C2;\n    float32x4_t C3;\n\n    A0 = vld1q_f32(A);\n    A1 = vld1q_f32(A+4);\n    A2 = vld1q_f32(A+8);\n    A3 = vld1q_f32(A+12);\n\n    // Zero accumulators for C values\n    C0 = vmovq_n_f32(0);\n    C1 = vmovq_n_f32(0);\n    C2 = vmovq_n_f32(0);\n    C3 = vmovq_n_f32(0);\n\n    // Multiply accumulate in 4x1 blocks, that is each column in C\n    B0 = vld1q_f32(B);\n    C0 = vfmaq_laneq_f32(C0, A0, B0, 0);\n    C0 = vfmaq_laneq_f32(C0, A1, B0, 1);\n    C0 = vfmaq_laneq_f32(C0, A2, B0, 2);\n    C0 = vfmaq_laneq_f32(C0, A3, B0, 3);\n    vst1q_f32(C, C0);\n\n    B1 = vld1q_f32(B+4);\n    C1 = vfmaq_laneq_f32(C1, A0, B1, 0);\n    C1 = vfmaq_laneq_f32(C1, A1, B1, 1);\n    C1 = vfmaq_laneq_f32(C1, A2, B1, 2);\n    C1 = vfmaq_laneq_f32(C1, A3, B1, 3);\n    vst1q_f32(C+4, C1);\n\n    B2 = vld1q_f32(B+8);\n    C2 = vfmaq_laneq_f32(C2, A0, B2, 0);\n    C2 = vfmaq_laneq_f32(C2, A1, B2, 1);\n    C2 = vfmaq_laneq_f32(C2, A2, B2, 2);\n    C2 = vfmaq_laneq_f32(C2, A3, B2, 3);\n    vst1q_f32(C+8, C2);\n\n    B3 = vld1q_f32(B+12);\n    C3 = vfmaq_laneq_f32(C3, A0, B3, 0);\n    C3 = vfmaq_laneq_f32(C3, A1, B3, 1);\n    C3 = vfmaq_laneq_f32(C3, A2, B3, 2);\n    C3 = vfmaq_laneq_f32(C3, A3, B3, 3);\n    vst1q_f32(C+12, C3);\n}\n</code></pre> \u9009\u62e9\u56fa\u5b9a\u5927\u5c0f\u76844X4\u77e9\u9635\uff0c\u56e0\u4e3a\uff1a</p> <p>\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u7279\u5b9a\u7684 4x4 \u77e9\u9635\uff0c\u4f8b\u5982\uff1a\u56fe\u5f62\u6216\u76f8\u5bf9\u8bba\u7269\u7406\u5b66\u3002 \u9713\u8679\u77e2\u91cf\u5bc4\u5b58\u5668\u5305\u542b\u56db\u4e2a 32 \u4f4d\u503c\u3002\u5c06\u5e94\u7528\u7a0b\u5e8f\u4e0e\u67b6\u6784\u76f8\u5339\u914d\u53ef\u4ee5\u4f7f\u5176\u4f18\u5316\u66f4\u5bb9\u6613\u3002 \u8fd9\u4e2a 4x4 \u5185\u6838\u53ef\u4ee5\u7528\u4e8e\u66f4\u901a\u7528\u7684\u5185\u6838\u3002 \u672c\u4f8b\u4e2d\u4f7f\u7528\u7684 Neon \u5185\u5d4c\u51fd\u6570\u6709</p> <p></p> <p>\u4f7f\u7528sve\u5185\u5efa\u51fd\u6570\u91cd\u5199neon\u5185\u5efa\u51fd\u6570\uff0c\u4ee5\u4e0b\uff1a <pre><code>void matrix_multiply_nx4_sve(const float32_t *A, const float32_t *B, float32_t *C, uint32_t n) {\n    // these are the columns A\n    svfloat32_t A0;\n    svfloat32_t A1;\n    svfloat32_t A2;\n    svfloat32_t A3;\n\n    // these are the columns B\n    svfloat32_t B0;\n    svfloat32_t B1;\n    svfloat32_t B2;\n    svfloat32_t B3;\n\n    // these are the columns C\n    svfloat32_t C0;\n    svfloat32_t C1;\n    svfloat32_t C2;\n    svfloat32_t C3;\n\n    svbool_t pred = svwhilelt_b32_u32(0, n);\n    A0 = svld1_f32(pred, A);\n    A1 = svld1_f32(pred, A+n);\n    A2 = svld1_f32(pred, A+2*n);\n    A3 = svld1_f32(pred, A+3*n);\n\n    // Zero accumulators for C values\n    C0 = svdup_n_f32(0);\n    C1 = svdup_n_f32(0);\n    C2 = svdup_n_f32(0);\n    C3 = svdup_n_f32(0);\n\n    // Multiply accumulate in 4x1 blocks, that is each column in C\n    B0 = svld1rq_f32(svptrue_b32(), B);\n    C0 = svmla_lane_f32(C0, A0, B0, 0);\n    C0 = svmla_lane_f32(C0, A1, B0, 1);\n    C0 = svmla_lane_f32(C0, A2, B0, 2);\n    C0 = svmla_lane_f32(C0, A3, B0, 3);\n    svst1_f32(pred, C, C0);\n\n    B1 = svld1rq_f32(svptrue_b32(), B+4);\n    C1 = svmla_lane_f32(C1, A0, B1, 0);\n    C1 = svmla_lane_f32(C1, A1, B1, 1);\n    C1 = svmla_lane_f32(C1, A2, B1, 2);\n    C1 = svmla_lane_f32(C1, A3, B1, 3);\n    svst1_f32(pred, C+4, C1);\n\n    B2 = svld1rq_f32(svptrue_b32(), B+8);\n    C2 = svmla_lane_f32(C2, A0, B2, 0);\n    C2 = svmla_lane_f32(C2, A1, B2, 1);\n    C2 = svmla_lane_f32(C2, A2, B2, 2);\n    C2 = svmla_lane_f32(C2, A3, B2, 3);\n    svst1_f32(pred, C+8, C2);\n\n    B3 = svld1rq_f32(svptrue_b32(), B+12);\n    C3 = svmla_lane_f32(C3, A0, B3, 0);\n    C3 = svmla_lane_f32(C3, A1, B3, 1);\n    C3 = svmla_lane_f32(C3, A2, B3, 2);\n    C3 = svmla_lane_f32(C3, A3, B3, 3);\n    svst1_f32(pred, C+12, C3);\n}\n</code></pre></p> <p></p> <p>\u91cd\u8981\u7684\u4e00\u70b9\u4e0d\u540c\u5c31\u662f\u53ef\u4ee5\u5ffd\u7565\u77e9\u9635\u7684\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u56e0\u4e3asve\u4e2d\u5177\u6709\u53d8\u957f\u5411\u91cf\u7279\u6027\u3002\u6216\u8005\u60a8\u53ef\u4ee5\u663e\u5f0f\u5730\u4f20\u9012n\u7ef4\u5411\u91cf\u7684\u957f\u5ea6\uff0c\u5e76\u4f7f\u7528\u9884\u6d4b\u5bc4\u5b58\u5668\u6765\u4fdd\u8bc1\u4e0d\u4f1a\u8d85\u8fc7\u5b83</p> <p>Example Two - Rewriting a larger matrix multiplication code with intrinsics \u793a\u4f8b\u4e8c\uff0c\u4f7f\u7528\u5185\u8054\u51fd\u6570\u91cd\u5199\u8f83\u5927\u7684\u77e9\u9635\u4e58\u6cd5</p> <p>To multiply larger matrices, treat them as blocks of 4x4 matrices. However, this approach only works with matrix sizes which are a multiple of four in both dimensions. To use this method without changing it, pad the matrix with zeroes.</p> <p>The Neon code for a more general matrix multiplication is listed below. The structure of the kernel has changed with the addition of loops and address calculations being the major changes. Like in the 4x4 kernel, unique variable names are used for the B columns. The alternative would be to use one variable and re-load it. This acts as a hint to the compiler to assign different registers to these variables. Assigning different registers enables the processor to complete the arithmetic instructions for one column, while waiting on the loads for another.</p> <p><pre><code>void matrix_multiply_neon(const float32_t *A, const float32_t *B, float32_t *C, uint32_t n, uint32_t m, uint32_t k) {\n    /*\n     * Multiply matrices A and B, store the result in C.\n     * It is the users responsibility to make sure the matrices are compatible.\n     */\n\n    int a_idx;\n    int b_idx;\n    int c_idx;\n\n    // these are the columns of a 4x4 sub matrix of A\n    float32x4_t A0;\n    float32x4_t A1;\n    float32x4_t A2;\n    float32x4_t A3;\n\n    // these are the columns of a 4x4 sub matrix of B\n    float32x4_t B0;\n    float32x4_t B1;\n    float32x4_t B2;\n    float32x4_t B3;\n\n    // these are the columns of a 4x4 sub matrix of C\n    float32x4_t C0;\n    float32x4_t C1;\n    float32x4_t C2;\n    float32x4_t C3;\n\n    for (int i_idx=0; i_idx&lt;n; i_idx+=4) {\n        for (int j_idx=0; j_idx&lt;m; j_idx+=4) {\n            // zero accumulators before matrix op\n            C0 = vmovq_n_f32(0);\n            C1 = vmovq_n_f32(0);\n            C2 = vmovq_n_f32(0);\n            C3 = vmovq_n_f32(0);\n            for (int k_idx=0; k_idx&lt;k; k_idx+=4){\n                // compute base index to 4x4 block\n                a_idx = i_idx + n*k_idx;\n                b_idx = k*j_idx + k_idx;\n\n                // load most current a values in row\n                A0 = vld1q_f32(A+a_idx);\n                A1 = vld1q_f32(A+a_idx+n);\n                A2 = vld1q_f32(A+a_idx+2*n);\n                A3 = vld1q_f32(A+a_idx+3*n);\n\n                // multiply accumulate 4x1 blocks, that is each column C\n                B0 = vld1q_f32(B+b_idx);\n                C0 = vfmaq_laneq_f32(C0,A0,B0,0);\n                C0 = vfmaq_laneq_f32(C0,A1,B0,1);\n                C0 = vfmaq_laneq_f32(C0,A2,B0,2);\n                C0 = vfmaq_laneq_f32(C0,A3,B0,3);\n\n                B1 = vld1q_f32(B+b_idx+k);\n                C1 = vfmaq_laneq_f32(C1,A0,B1,0);\n                C1 = vfmaq_laneq_f32(C1,A1,B1,1);\n                C1 = vfmaq_laneq_f32(C1,A2,B1,2);\n                C1 = vfmaq_laneq_f32(C1,A3,B1,3);\n\n                B2 = vld1q_f32(B+b_idx+2*k);\n                C2 = vfmaq_laneq_f32(C2,A0,B2,0);\n                C2 = vfmaq_laneq_f32(C2,A1,B2,1);\n                C2 = vfmaq_laneq_f32(C2,A2,B2,2);\n                C2 = vfmaq_laneq_f32(C2,A3,B2,3);\n\n                B3 = vld1q_f32(B+b_idx+3*k);\n                C3 = vfmaq_laneq_f32(C3,A0,B3,0);\n                C3 = vfmaq_laneq_f32(C3,A1,B3,1);\n                C3 = vfmaq_laneq_f32(C3,A2,B3,2);\n                C3 = vfmaq_laneq_f32(C3,A3,B3,3);\n            }\n            // compute base index for stores\n            c_idx = n*j_idx + i_idx;\n            vst1q_f32(C+c_idx, C0);\n            vst1q_f32(C+c_idx+n,C1);\n            vst1q_f32(C+c_idx+2*n,C2);\n            vst1q_f32(C+c_idx+3*n,C3);\n        }\n    }\n}\n</code></pre> Compiling and disassembling this function, and comparing it with the C function shows:</p> <p>Fewer arithmetic instructions for a given matrix multiplication, because it utilizes the Advanced SIMD technology with full register packing. Typical C code, generally, does not. FMLA instead of FMUL instructions. As specified by the intrinsics. Fewer loop iterations. When used properly intrinsics allow loops to be unrolled easily. However, there are unnecessary loads and stores because of memory allocation and initialization of data types (for example, float32x4_t) which are not used in the no-intrinsics C code.</p> <p>Re-writing the code to use SVE intrinsics instead of Neon intrinsics, could give you:</p> <p><pre><code>void matrix_multiply_sve(const float32_t *A, const float32_t *B, float32_t *C, uint32_t n, uint32_t m, uint32_t k) {\n    /*\n     * Multiply matrices A and B, store the result in C.\n     * It is the users responsibility to make sure the matrices are compatible.\n     */\n\n    int a_idx;\n    int b_idx;\n    int c_idx;\n\n    // these are the columns of a nx4 sub matrix of A\n    svfloat32_t A0;\n    svfloat32_t A1;\n    svfloat32_t A2;\n    svfloat32_t A3;\n\n    // these are the columns of a 4x4 sub matrix of B\n    svfloat32_t B0;\n    svfloat32_t B1;\n    svfloat32_t B2;\n    svfloat32_t B3;\n\n    // these are the columns of a nx4 sub matrix of C\n    svfloat32_t C0;\n    svfloat32_t C1;\n    svfloat32_t C2;\n    svfloat32_t C3;\n\n    for (int i_idx=0; i_idx&lt;n; i_idx+=svcntw()) {\n        // calculate predicate for this i_idx\n        svbool_t pred = svwhilelt_b32_u32(i_idx, n);\n\n        for (int j_idx=0; j_idx&lt;m; j_idx+=4) {\n            // zero accumulators before matrix op\n            C0 = svdup_n_f32(0);\n            C1 = svdup_n_f32(0);\n            C2 = svdup_n_f32(0);\n            C3 = svdup_n_f32(0);\n            for (int k_idx=0; k_idx&lt;k; k_idx+=4){\n                // compute base index to 4x4 block\n                a_idx = i_idx + n*k_idx;\n                b_idx = k*j_idx + k_idx;\n\n                // load most current a values in row\n                A0 = svld1_f32(pred, A+a_idx);\n                A1 = svld1_f32(pred, A+a_idx+n);\n                A2 = svld1_f32(pred, A+a_idx+2*n);\n                A3 = svld1_f32(pred, A+a_idx+3*n);\n\n                // multiply accumulate 4x1 blocks, that is each column C\n                B0 = svld1rq_f32(svptrue_b32(), B+b_idx);\n                C0 = svmla_lane_f32(C0,A0,B0,0);\n                C0 = svmla_lane_f32(C0,A1,B0,1);\n                C0 = svmla_lane_f32(C0,A2,B0,2);\n                C0 = svmla_lane_f32(C0,A3,B0,3);\n\n                B1 = svld1rq_f32(svptrue_b32(), B+b_idx+k);\n                C1 = svmla_lane_f32(C1,A0,B1,0);\n                C1 = svmla_lane_f32(C1,A1,B1,1);\n                C1 = svmla_lane_f32(C1,A2,B1,2);\n                C1 = svmla_lane_f32(C1,A3,B1,3);\n\n                B2 = svld1rq_f32(svptrue_b32(), B+b_idx+2*k);\n                C2 = svmla_lane_f32(C2,A0,B2,0);\n                C2 = svmla_lane_f32(C2,A1,B2,1);\n                C2 = svmla_lane_f32(C2,A2,B2,2);\n                C2 = svmla_lane_f32(C2,A3,B2,3);\n\n                B3 = svld1rq_f32(svptrue_b32(), B+b_idx+3*k);\n                C3 = svmla_lane_f32(C3,A0,B3,0);\n                C3 = svmla_lane_f32(C3,A1,B3,1);\n                C3 = svmla_lane_f32(C3,A2,B3,2);\n                C3 = svmla_lane_f32(C3,A3,B3,3);\n            }\n            // compute base index for stores\n            c_idx = n*j_idx + i_idx;\n            svst1_f32(pred, C+c_idx, C0);\n            svst1_f32(pred, C+c_idx+n,C1);\n            svst1_f32(pred, C+c_idx+2*n,C2);\n            svst1_f32(pred, C+c_idx+3*n,C3);\n        }\n    }\n}\n</code></pre> This code is almost identical to the earlier Neon code except for the differing intrinsics, and in addition, thanks to predication, there is no longer a constraint on the number of rows of A. However, you must ensure that the number of columns of A and C, and both dimensions of B, are multiples of four because the predication used above does not account for this. Adding such further predication is possible but would reduce the clarity of this example.</p> <p>Comparing it with the C function and Neon functions, the SVE example:</p> <p>Uses WHILELT to determine the predicate for doing each iteration of the outer loop. This guarantees you have at least one element to do by the loop condition. Increments i_idx by CNTW (the number of 32-bit elements in a vector) to avoid hard-coding the number of elements calculated in an iteration of the outer loop.</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/02/01/mkdocs%E7%94%A8%E4%BE%8B/","title":"Mkdocs\u7528\u4f8b","text":"<p>\u8fd9\u91cc\u662fmkdocs\u7684\u4e00\u4e9b\u7f8e\u89c2\u7684\u7528\u4f8b\uff0c\u5728\u8fd9\u91cc\u8bb0\u5f55</p> <p>\u4ee3\u7801\u6307\u5b9a\u884c\u9ad8\u4eae\uff1a</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main(){\n    cout&lt;&lt;\"\u6d4b\u8bd5\u8f93\u51fa\uff01\";\n}\n</code></pre>"},{"location":"blog/2024/02/08/tn3399%E5%88%B7%E6%9C%BA/","title":"Tn3399\u5237\u673a","text":"<p>\u672c\u6587\u8bb0\u5f55\u4e86tn3399 v3 emmc\u5237\u5165\u9489\u9489f1\u677f\u5b50\u7684\u8fc7\u7a0b\u548c\u5b66\u4e60</p>"},{"location":"blog/2024/02/08/tn3399%E5%88%B7%E6%9C%BA/#_1","title":"\u4e86\u89e3\u5237\u5165\u7cfb\u7edf\u7ed3\u6784","text":"<ol> <li>loader <pre><code>./rkbin/tools/upgrade_tool db ./rk3399_loader_v1.22.119.bin\n</code></pre></li> <li>system <pre><code>./rkbin/tools/upgrade_tool wl 0x0 ./system.img\n</code></pre> \u5bf9\u5e94\u7684\u56fe\u7247\uff1a </li> </ol>"},{"location":"blog/2024/02/08/tn3399%E5%88%B7%E6%9C%BA/#_2","title":"\u4e86\u89e3\u5230\u7684\u540d\u8bcd","text":"<ol> <li>dtb\uff1adts\u7f16\u8bd1\u540e\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0cdtb\u4f5c\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u88ab\u52a0\u8f7d\u5230\u7cfb\u7edf\u4e2d</li> <li>opp\uff1alinux\u7535\u6e90\u7ba1\u7406\uff0c\u5c06\u57df\u4e2d\u6bcf\u4e2a\u8bbe\u5907\u652f\u6301\u7684\u7535\u538b\u548c\u9891\u7387\u7684\u79bb\u6563\u8fdc\u8db3\u7684\u96c6\u5408\u6210\u4e3aOperating Performance Points\uff08OPP\uff09\u3002</li> </ol>"},{"location":"blog/2024/02/08/tn3399%E5%88%B7%E6%9C%BA/#_3","title":"\u9057\u7559\u4efb\u52a1","text":"<ol> <li>\u5b66\u4e60\u7f16\u5199dts\u4ee5\u9a71\u52a8\u58f0\u97f3\u548cgpu\u7b49\u8bbe\u5907\u786c\u4ef6</li> <li>\u5b66\u4e60\u7f16\u5199uboot\u548c\u5236\u4f5c\u7cfb\u7edf\u955c\u50cf\uff0c\u4e86\u89e3\u5185\u6838\u7ed3\u6784</li> </ol>"},{"location":"blog/2025/03/19/%E4%B8%80%E5%B0%81%E5%A4%84%E4%BA%8E%E4%BD%8E%E8%B0%B7%E7%9A%84%E8%87%AA%E7%99%BD%E4%B9%A6/","title":"\u4e00\u5c01\u5904\u4e8e\u4f4e\u8c37\u7684\u81ea\u767d\u4e66","text":"<p>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 Xfvl+bop6eDNMCaxL0/HSQ==</p>"},{"location":"blog/2025/02/25/%E5%87%BA%E5%88%86%E4%B9%8B%E5%90%8E/","title":"\u51fa\u5206\u4e4b\u540e","text":"<p>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</p>"},{"location":"blog/2025/02/23/%E5%87%BA%E5%88%86%E5%89%8D%E7%9A%84%E4%B8%80%E6%99%9A%E6%89%80%E6%83%B3/","title":"\u51fa\u5206\u524d\u7684\u4e00\u665a\u6240\u60f3","text":"<p>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 H6TkkN45O/MbIWDd8MUpxA==</p>"},{"location":"blog/2025/03/07/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9C%89%E7%94%A8/","title":"\u53cd\u5411\u4f20\u64ad\u4e3a\u4ec0\u4e48\u6709\u7528","text":"<p>\u4eca\u5929\u4ece\u8ba1\u7b97\u56fe\u7684\u89d2\u5ea6\u597d\u597d\u770b\u770b\u4e3a\u4ec0\u4e48\u53cd\u5411\u4f20\u64ad\u662f\u6709\u7528\u7684</p> <p>\u7ed3\u8bba\uff1a\u7531\u4e8e\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53d8\u91cf\u7684\u504f\u5bfc\u6570\u53ea\u9700\u8981\u4e00\u8f6e\u8ba1\u7b97\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e2d\u95f4\u7ed3\u679c\u3002\u800c\u6bcf\u4e2a\u53d8\u91cf\u76f8\u5bf9\u4e8e\u6700\u7ec8\u635f\u5931\u51fd\u6570\u7684\u504f\u5bfc\u6570\u9700\u8981\u8003\u8651\u8def\u5f84\u7684\u53e0\u52a0\uff0c\u591a\u4e2a\u53d8\u91cf\u9700\u8981\u591a\u6b21\u8ba1\u7b97</p>"},{"location":"blog/2025/02/21/%E5%B0%8F%E7%B1%B3mini%E8%B7%AF%E7%94%B1%E5%99%A8%E5%88%B7%E6%9C%BA/","title":"\u5c0f\u7c73mini\u8def\u7531\u5668\u5237\u673a","text":"<ol> <li>dnschecker.org\u67e5\u8be2\u8def\u7531\u5668ip\u5730\u5740</li> <li>ssh root@[ipv6\u5730\u5740] \u5bc6\u7801 lierwang</li> <li>cat /proc/net/arp \u83b7\u5f97\u8bbe\u5907mac  \uff08/tmp/dhcp.leases\uff09</li> <li></li> <li>wakeonlan -i 192.168.1.2 08:BF:B8:17:B5:92 </li> <li>cat /tmp/hosts/odhcpd  \u83b7\u5f97\u8bbe\u5907ipv6\u5730\u5740</li> </ol> <p>\u7981\u6b62debian\u4f11\u7720\uff1a</p>"},{"location":"blog/2025/02/21/%E5%B0%8F%E7%B1%B3mini%E8%B7%AF%E7%94%B1%E5%99%A8%E5%88%B7%E6%9C%BA/#disable-debian","title":"Disable Debian\u4f11\u7720","text":"<p>sudo nano /etc/systemd/logind.conf HandleLidSwitch=ignore sudo service systemd-logind restart</p>"},{"location":"blog/2025/02/21/%E5%B0%8F%E7%B1%B3mini%E8%B7%AF%E7%94%B1%E5%99%A8%E5%88%B7%E6%9C%BA/#_1","title":"\u7b14\u8bb0\u672c\u5408\u76d6\u606f\u5c4f\u4e0d\u6302\u8d77","text":"<p>\u5728tweak\u5185general\u8bbe\u7f6e\u5408\u76d6\u4e0d\u6302\u8d77\u5373\u53ef</p>"},{"location":"blog/2025/02/10/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ragflowollama/","title":"\u672c\u5730\u90e8\u7f72ragflow+ollama","text":"<p>\u672c\u6587\u8bb0\u5f55\u4e86\u672c\u5730\u90e8\u7f72ragflow+ollama\u7684\u6b65\u9aa4\u548c\u6ce8\u610f\u4e8b\u9879\uff0c\u4ee5\u53ca\u4e86\u89e3\u5230\u7684\u77e5\u8bc6</p>"},{"location":"blog/2025/02/10/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ragflowollama/#_1","title":"\u90e8\u7f72\u6d41\u7a0b","text":""},{"location":"blog/2025/02/10/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ragflowollama/#1-ollama","title":"1. \u90e8\u7f72ollama","text":"<p>\u4f7f\u7528cpu\uff1a <pre><code>docker run -d -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama\n</code></pre> \u5c06/root/.ollama\u6302\u8f7d\u5230docker\u7684\u6570\u636e\u5377\u4e2d <pre><code>docker volume inspect ollama\n\n[\n    {\n        \"CreatedAt\": \"2025-02-09T23:47:10+08:00\",\n        \"Driver\": \"local\",\n        \"Labels\": null,\n        \"Mountpoint\": \"/var/lib/docker/volumes/ollama/_data\",\n        \"Name\": \"ollama\",\n        \"Options\": null,\n        \"Scope\": \"local\"\n    }\n]\n</code></pre> \u5c06modelfile\u548cgguf\u6587\u4ef6\u590d\u5236\u5230\u6302\u8f7d\u70b9 \u7f16\u8f91Modelfile <pre><code>FROM PATH_TO_MODEL\nPARAMETER temperature 0.8\nSYSTEM \"\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684AI\u52a9\u624b\"\n</code></pre></p> <pre><code>sudo cp PATH_TO_MODEL /opt/deepseek/models/\nsudo cp PATH_TO_MODELFILE /opt/deepseek/models/\n\ndocker exec -it ollama ls /root/.ollama/models #\u68c0\u9a8c\u6a21\u578b\u548c\u914d\u7f6e\u6587\u4ef6\ndockre exec -it ollama create MODEL_NAME -f PATH_TO_MODELFILE\ndocker exec -it ollama ollama ls #\u68c0\u9a8collama\u6a21\u578b\u5217\u8868\n</code></pre>"},{"location":"blog/2025/02/10/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ragflowollama/#2-ragflow","title":"2. \u90e8\u7f72ragflow","text":"<p>\u66f4\u6539\u7aef\u53e3 9000\u7aef\u53e3\u88abportainer\u5360\u7528\uff0c80\u7aef\u53e3\u88abapache\u5360\u7528 \u66f4\u6539\u5982\u4e0b\u6587\u4ef6\uff1a <pre><code>$ git diff\ndiff --git a/conf/service_conf.yaml b/conf/service_conf.yaml\nindex 18b41e16..737bb1a5 100644\n--- a/conf/service_conf.yaml\n+++ b/conf/service_conf.yaml\n@@ -12,7 +12,7 @@ mysql:\n minio:\n   user: 'rag_flow'\n   password: 'infini_rag_flow'\n-  host: 'minio:9000'\n+  host: 'minio:9001'\n es:\n   hosts: 'http://es01:1200'\n   username: 'elastic'\ndiff --git a/docker/.env b/docker/.env\nindex 53b4bb6d..07871c57 100644\n--- a/docker/.env\n+++ b/docker/.env\n@@ -56,10 +56,10 @@ MYSQL_PORT=5455\n MINIO_HOST=minio\n # The port used to expose the MinIO console interface to the host machine, \n # allowing EXTERNAL access to the web-based console running inside the Docker container. \n-MINIO_CONSOLE_PORT=9001\n+MINIO_CONSOLE_PORT=9002\n # The port used to expose the MinIO API service to the host machine, \n # allowing EXTERNAL access to the MinIO object storage service running inside the Docker container. \n-MINIO_PORT=9000\n+MINIO_PORT=9001\n # The username for MinIO. \n # When updated, you must revise the `minio.user` entry in service_conf.yaml accordingly.\n MINIO_USER=rag_flow\n@@ -81,7 +81,7 @@ SVR_HTTP_PORT=9380\n\n # The RAGFlow Docker image to download.\n # Defaults to the v0.16.0-slim edition, which is the RAGFlow Docker image without embedding models.\n-RAGFLOW_IMAGE=infiniflow/ragflow:v0.16.0-slim\n+RAGFLOW_IMAGE=infiniflow/ragflow:v0.16.0\n #\n # To download the RAGFlow Docker image with embedding models, uncomment the following line instead:\n # RAGFLOW_IMAGE=infiniflow/ragflow:v0.16.0\ndiff --git a/docker/docker-compose-base.yml b/docker/docker-compose-base.yml\nindex 72951170..4f11b4cb 100644\n--- a/docker/docker-compose-base.yml\n+++ b/docker/docker-compose-base.yml\n@@ -98,10 +98,10 @@ services:\n   minio:\n     image: quay.io/minio/minio:RELEASE.2023-12-20T01-00-02Z\n     container_name: ragflow-minio\n-    command: server --console-address \":9001\" /data\n+    command: server --console-address \":9002\" /data\n     ports:\n-      - ${MINIO_PORT}:9000\n-      - ${MINIO_CONSOLE_PORT}:9001\n+      - ${MINIO_PORT}:9001\n+      - ${MINIO_CONSOLE_PORT}:9002\n     env_file: .env\n     environment:\n       - MINIO_ROOT_USER=${MINIO_USER}\ndiff --git a/docker/docker-compose.yml b/docker/docker-compose.yml\nindex 676f167d..9e3b80ad 100644\n--- a/docker/docker-compose.yml\n+++ b/docker/docker-compose.yml\n@@ -10,7 +10,7 @@ services:\n     container_name: ragflow-server\n     ports:\n       - ${SVR_HTTP_PORT}:9380\n-      - 80:80\n+      - 81:80\n       - 443:443\n     volumes:\n       - ./ragflow-logs:/ragflow/logs\ndiff --git a/docker/service_conf.yaml.template b/docker/service_conf.yaml.template\nindex f4acd8bc..47f9dfbb 100644\n--- a/docker/service_conf.yaml.template\n+++ b/docker/service_conf.yaml.template\n@@ -12,7 +12,7 @@ mysql:\n minio:\n   user: '${MINIO_USER:-rag_flow}'\n   password: '${MINIO_PASSWORD:-infini_rag_flow}'\n-  host: '${MINIO_HOST:-minio}:9000'\n+  host: '${MINIO_HOST:-minio}:9001'\n es:\n   hosts: 'http://${ES_HOST:-es01}:9200'\n   username: '${ES_USER:-elastic}'\ndiff --git a/helm/templates/minio.yaml b/helm/templates/minio.yaml\nindex 289007d6..5a5adbf5 100644\n--- a/helm/templates/minio.yaml\n+++ b/helm/templates/minio.yaml\n@@ -49,12 +49,12 @@ spec:\n               name: {{ include \"ragflow.fullname\" . }}-env-config\n         args:\n           - server\n-          - \"--console-address=:9001\"\n+          - \"--console-address=:9002\"\n           - \"/data\"\n         ports:\n-          - containerPort: 9000\n-            name: s3\n           - containerPort: 9001\n+            name: s3\n+          - containerPort: 9002\n             name: console\n         {{- with .Values.minio.deployment.resources }}\n         resources:\n@@ -82,10 +82,10 @@ spec:\n   ports:\n     - name: s3\n       protocol: TCP\n-      port: 9000\n+      port: 9001\n       targetPort: s3\n     - name: console\n       protocol: TCP\n-      port: 9001\n+      port: 9002\n       targetPort: console\n   type: {{ .Values.minio.service.type }}\n</code></pre></p> <p>\u5c06minio\u7684\u7aef\u53e3\u4fee\u6539\u81f39001,9002.\u5c06\u767b\u9646\u7684\u7aef\u53e3\u4fee\u6539\u81f381</p> <p>\u4ee5\u4e0b\u542f\u52a8\u670d\u52a1\u5668\u5185\u5bb9\u5f15\u7528\u81earagflow\u7684\u4e2d\u6587readme\u90e8\u5206</p>"},{"location":"blog/2025/02/10/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2ragflowollama/#_2","title":"\ud83d\ude80 \u542f\u52a8\u670d\u52a1\u5668","text":"<ol> <li>\u786e\u4fdd <code>vm.max_map_count</code> \u4e0d\u5c0f\u4e8e 262144\uff1a</li> </ol> <p>\u5982\u9700\u786e\u8ba4 <code>vm.max_map_count</code> \u7684\u5927\u5c0f\uff1a</p> <pre><code>$ sysctl vm.max_map_count\n</code></pre> <p>\u5982\u679c <code>vm.max_map_count</code> \u7684\u503c\u5c0f\u4e8e 262144\uff0c\u53ef\u4ee5\u8fdb\u884c\u91cd\u7f6e\uff1a</p> <pre><code># \u8fd9\u91cc\u6211\u4eec\u8bbe\u4e3a 262144:\n$ sudo sysctl -w vm.max_map_count=262144\n</code></pre> <p>\u4f60\u7684\u6539\u52a8\u4f1a\u5728\u4e0b\u6b21\u7cfb\u7edf\u91cd\u542f\u65f6\u88ab\u91cd\u7f6e\u3002\u5982\u679c\u5e0c\u671b\u505a\u6c38\u4e45\u6539\u52a8\uff0c\u8fd8\u9700\u8981\u5728 /etc/sysctl.conf \u6587\u4ef6\u91cc\u628a <code>vm.max_map_count</code> \u7684\u503c\u518d\u76f8\u5e94\u66f4\u65b0\u4e00\u904d\uff1a</p> <pre><code>vm.max_map_count=262144\n</code></pre> <ol> <li>\u514b\u9686\u4ed3\u5e93\uff1a</li> </ol> <pre><code>$ git clone https://github.com/infiniflow/ragflow.git\n</code></pre> <ol> <li>\u8fdb\u5165 docker \u6587\u4ef6\u5939\uff0c\u5229\u7528\u63d0\u524d\u7f16\u8bd1\u597d\u7684 Docker \u955c\u50cf\u542f\u52a8\u670d\u52a1\u5668\uff1a</li> </ol> <p>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4f1a\u81ea\u52a8\u4e0b\u8f7d RAGFlow slim Docker \u955c\u50cf <code>v0.16.0-slim</code>\u3002\u8bf7\u53c2\u8003\u4e0b\u8868\u67e5\u770b\u4e0d\u540c Docker \u53d1\u884c\u7248\u7684\u63cf\u8ff0\u3002\u5982\u9700\u4e0b\u8f7d\u4e0d\u540c\u4e8e <code>v0.16.0-slim</code> \u7684 Docker \u955c\u50cf\uff0c\u8bf7\u5728\u8fd0\u884c <code>docker compose</code> \u542f\u52a8\u670d\u52a1\u4e4b\u524d\u5148\u66f4\u65b0 docker/.env \u6587\u4ef6\u5185\u7684 <code>RAGFLOW_IMAGE</code> \u53d8\u91cf\u3002\u6bd4\u5982\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e <code>RAGFLOW_IMAGE=infiniflow/ragflow:v0.16.0</code> \u6765\u4e0b\u8f7d RAGFlow \u955c\u50cf\u7684 <code>v0.16.0</code> \u5b8c\u6574\u53d1\u884c\u7248\u3002</p> <pre><code>$ cd ragflow\n$ docker compose -f docker/docker-compose.yml up -d\n</code></pre> RAGFlow image tag Image size (GB) Has embedding models? Stable? v0.16.0 \u22489 :heavy_check_mark: Stable release v0.16.0-slim \u22482 \u274c Stable release nightly \u22489 :heavy_check_mark: Unstable nightly build nightly-slim \u22482 \u274c Unstable nightly build <p>[!TIP] \u5982\u679c\u4f60\u9047\u5230 Docker \u955c\u50cf\u62c9\u4e0d\u4e0b\u6765\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5728 docker/.env \u6587\u4ef6\u5185\u6839\u636e\u53d8\u91cf <code>RAGFLOW_IMAGE</code> \u7684\u6ce8\u91ca\u63d0\u793a\u9009\u62e9\u534e\u4e3a\u4e91\u6216\u8005\u963f\u91cc\u4e91\u7684\u76f8\u5e94\u955c\u50cf\u3002</p> <ul> <li>\u534e\u4e3a\u4e91\u955c\u50cf\u540d\uff1a<code>swr.cn-north-4.myhuaweicloud.com/infiniflow/ragflow</code></li> <li>\u963f\u91cc\u4e91\u955c\u50cf\u540d\uff1a<code>registry.cn-hangzhou.aliyuncs.com/infiniflow/ragflow</code></li> </ul> <ol> <li>\u670d\u52a1\u5668\u542f\u52a8\u6210\u529f\u540e\u518d\u6b21\u786e\u8ba4\u670d\u52a1\u5668\u72b6\u6001\uff1a</li> </ol> <pre><code>$ docker logs -f ragflow-server\n</code></pre> <p>\u51fa\u73b0\u4ee5\u4e0b\u754c\u9762\u63d0\u793a\u8bf4\u660e\u670d\u52a1\u5668\u542f\u52a8\u6210\u529f\uff1a</p> <pre><code>     ____   ___    ______ ______ __\n    / __ \\ /   |  / ____// ____// /____  _      __\n   / /_/ // /| | / / __ / /_   / // __ \\| | /| / /\n  / _, _// ___ |/ /_/ // __/  / // /_/ /| |/ |/ /\n /_/ |_|/_/  |_|\\____//_/    /_/ \\____/ |__/|__/\n\n * Running on all addresses (0.0.0.0)\n * Running on http://127.0.0.1:9380\n * Running on http://x.x.x.x:9380\n INFO:werkzeug:Press CTRL+C to quit\n</code></pre> <p>\u5982\u679c\u60a8\u8df3\u8fc7\u8fd9\u4e00\u6b65\u7cfb\u7edf\u786e\u8ba4\u6b65\u9aa4\u5c31\u767b\u5f55 RAGFlow\uff0c\u4f60\u7684\u6d4f\u89c8\u5668\u6709\u53ef\u80fd\u4f1a\u63d0\u793a <code>network anormal</code> \u6216 <code>\u7f51\u7edc\u5f02\u5e38</code>\uff0c\u56e0\u4e3a RAGFlow \u53ef\u80fd\u5e76\u672a\u5b8c\u5168\u542f\u52a8\u6210\u529f\u3002</p> <ol> <li>\u5728\u4f60\u7684\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u4f60\u7684\u670d\u52a1\u5668\u5bf9\u5e94\u7684 IP \u5730\u5740\u5e76\u767b\u5f55 RAGFlow\u3002 <p>\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u60a8\u53ea\u9700\u8f93\u5165 http://IP_OF_YOUR_MACHINE \u5373\u53ef\uff1a\u672a\u6539\u52a8\u8fc7\u914d\u7f6e\u5219\u65e0\u9700\u8f93\u5165\u7aef\u53e3\uff08\u9ed8\u8ba4\u7684 HTTP \u670d\u52a1\u7aef\u53e3 80\uff09\u3002</p> </li> <li>\u5728 service_conf.yaml.template \u6587\u4ef6\u7684 <code>user_default_llm</code> \u680f\u914d\u7f6e LLM factory\uff0c\u5e76\u5728 <code>API_KEY</code> \u680f\u586b\u5199\u548c\u4f60\u9009\u62e9\u7684\u5927\u6a21\u578b\u76f8\u5bf9\u5e94\u7684 API key\u3002</li> </ol> <p>\u8be6\u89c1 llm_api_key_setup\u3002 \u5728\u754c\u9762\u6dfb\u52a0ollama\u7684\u6a21\u578b\u670d\u52a1\u5373\u53ef\uff0collama\u7684\u7aef\u53e3\u662f11434,ip\u5730\u5740\u53ef\u4ee5\u53c2\u8003docker bridge\u7684\u5730\u5740\uff0c\u6216\u8005\u76f4\u63a5\u586b\u5199\u672c\u673a\u7684\u5c40\u57df\u7f51ip\u5730\u5740\u3002</p>"},{"location":"blog/2025/03/09/%E8%A7%82%E5%91%BD%E8%BF%90%E7%9F%B3%E4%B9%8B%E9%97%A8%E6%9C%89%E6%84%9F/","title":"\u89c2\u547d\u8fd0\u77f3\u4e4b\u95e8\u6709\u611f","text":"<p>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 ISyCrVm1vzZksa6BrXPhJA==</p>"},{"location":"blog/2025/02/17/%E8%B4%AD%E4%B9%B0thinkpadt500%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/","title":"\u8d2d\u4e70ThinkpadT500\u53ca\u76f8\u5173\u77e5\u8bc6","text":""},{"location":"blog/2025/02/17/%E8%B4%AD%E4%B9%B0thinkpadt500%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#thinkpad-t500","title":"\u8d2d\u4e70ThinkPad T500","text":"<p>\u8fd9\u662f\u5173\u4e8e\u8d2d\u4e70Thinkpad T500\u7684\u8d2d\u4e70\u590d\u76d8</p> <p>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</p>"},{"location":"blog/2024/02/01/mkdocs%E9%83%A8%E7%BD%B2%E6%8A%80%E6%9C%AF/","title":"mkdocs\u90e8\u7f72\u6280\u672f","text":"<p>\u672c\u6587\u8bb0\u5f55\u4e86mkdocs\u5728\u672c\u5730\u7684\u90e8\u7f72\u8fc7\u7a0b\u4ee5\u53ca\u90e8\u7f72\u5230github pages\u7684\u8fc7\u7a0b</p> <p>\u9996\u5148\u8fdb\u884c\u672c\u5730\u90e8\u7f72\uff0c\u4f7f\u7528docker\u65b9\u5f0f\u90e8\u7f72</p> <ol> <li>\u4e3a\u65b9\u4fbf\u4fee\u6539\u6587\u4ef6\uff0c\u5c06\u5bb9\u5668\u76f8\u5e94\u76ee\u5f55\u6302\u8f7d\u5230\u672c\u5730\uff0c\u65b0\u5efa~/docs\u4f5c\u4e3amkdocs\u5de5\u4f5c\u76ee\u5f55\u7684\u6620\u5c04</li> <li>\u9996\u5148\u751f\u6210\u914d\u7f6e\u6587\u4ef6 <pre><code>docker run  -it --rm -v ~/docs:/docs squidfunk/mkdocs-material new .\n</code></pre></li> <li>\u6d4b\u8bd5\u8fd0\u884cmkdocs <pre><code>docker run -it --name mkdocs --rm -v ~/docs:/docs -p 10000:8000 --workdir /docs squidfunk/mkdocs-material serve -a 0.0.0.0:8000\n</code></pre></li> <li>\u8fd0\u884cmkdocs <pre><code>docker run -d --name mkdocs --rm -v ~/docs:/docs -p 10000:8000 --workdir /docs squidfunk/mkdocs-material serve -a 0.0.0.0:8000\n</code></pre></li> </ol> <p>\u90e8\u7f72\u5230github page</p> <p>\u5b98\u65b9\u53c2\u8003\u7f51\u5740 \u4f7f\u7528workflow\u81ea\u52a8\u751f\u6210gh-deploy\u5206\u652f\uff0c\u7136\u540e\u5c06github page\u7684\u90e8\u7f72\u5206\u652f\u6307\u5411gh-deploy\u7684/root</p> <pre><code>name: ci \non:\n  push:\n    branches:\n      - master \n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v5\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV \n      - uses: actions/cache@v4\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: .cache\n          restore-keys: |\n            mkdocs-material-\n      - run: pip install mkdocs # (1)!\n      - run: pip install mkdocs-material \n      - run: pip install mkdocs-blogging-plugin  \n      - run: mkdocs gh-deploy --force\n</code></pre> <ol> <li>\u6ce8\u610f\u6807\u4eae\u7684\u8fd9\u4e24\u884c\uff0c\u52a0\u4e0a\u8fd9\u4e24\u884cgithub page\u7684\u6784\u5efa\u624d\u4e0d\u4f1a\u51fa\u9519</li> </ol> <p>\u53c2\u8003\u7f51\u7ad9</p> <p>mkdocs-material</p> <p>Admonitions\u4f7f\u7528</p>","tags":["mkdocs","python","github page"]},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/mkdocs/","title":"mkdocs","text":""},{"location":"blog/page/2/","title":"Blog","text":""}]}