<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>[kernel.kallsyms][+ffffffebad484456] (933,565,575 samples, 0.24%)</title><rect x="1164.3" y="277" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.27" y="287.5" ></text>
</g>
<g >
<title>libomp.so[+63b1c] (131,038,713 samples, 0.03%)</title><rect x="1172.1" y="453" width="0.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1175.15" y="463.5" ></text>
</g>
<g >
<title>sincosf (98,111,521 samples, 0.03%)</title><rect x="1139.4" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.37" y="415.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad479c3e] (395,792,423 samples, 0.10%)</title><rect x="1159.3" y="245" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1162.32" y="255.5" ></text>
</g>
<g >
<title>libomp.so[+63aa8] (90,329,178 samples, 0.02%)</title><rect x="1171.3" y="453" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1174.32" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad0100fc] (41,952,745 samples, 0.01%)</title><rect x="211.7" y="357" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="214.68" y="367.5" ></text>
</g>
<g >
<title>libomp.so[+63be8] (87,772,725 samples, 0.02%)</title><rect x="1188.6" y="453" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1191.57" y="463.5" ></text>
</g>
<g >
<title>libomp.so[+63b58] (34,869,151 samples, 0.01%)</title><rect x="1173.1" y="453" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1176.14" y="463.5" ></text>
</g>
<g >
<title>libomp.so[+63b90] (52,676,800 samples, 0.01%)</title><rect x="1176.7" y="453" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1179.71" y="463.5" ></text>
</g>
<g >
<title>libomp.so[+63bec] (33,401,425 samples, 0.01%)</title><rect x="1188.8" y="453" width="0.1" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="1191.84" y="463.5" ></text>
</g>
<g >
<title>std::__ndk1::__function::__func&lt;llama_build_graph (32,630,896 samples, 0.01%)</title><rect x="1157.3" y="373" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1160.33" y="383.5" ></text>
</g>
<g >
<title>libomp.so[+638b4] (34,898,741 samples, 0.01%)</title><rect x="1167.6" y="453" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1170.58" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad08511e] (577,139,526 samples, 0.15%)</title><rect x="1161.3" y="261" width="1.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1164.32" y="271.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad0120b2] (33,862,469 samples, 0.01%)</title><rect x="1167.6" y="421" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1170.58" y="431.5" ></text>
</g>
<g >
<title>libomp.so[+63b5c] (80,525,347 samples, 0.02%)</title><rect x="1173.2" y="453" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1176.25" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad200bc2] (62,569,334 samples, 0.02%)</title><rect x="211.7" y="389" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="214.68" y="399.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebaea11b02] (1,046,018,508 samples, 0.27%)</title><rect x="1164.0" y="309" width="3.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1167.02" y="319.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae7365ea] (33,862,469 samples, 0.01%)</title><rect x="1167.6" y="389" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1170.58" y="399.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebaea1260e] (256,877,195 samples, 0.07%)</title><rect x="1110.6" y="373" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1113.62" y="383.5" ></text>
</g>
<g >
<title>ggml_compute_forward_mul (526,901,635 samples, 0.14%)</title><rect x="225.2" y="421" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="228.24" y="431.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad482596] (38,852,801 samples, 0.01%)</title><rect x="1166.4" y="245" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1169.39" y="255.5" ></text>
</g>
<g >
<title>libomp.so[+63a70] (57,199,672 samples, 0.01%)</title><rect x="1168.6" y="453" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1171.55" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad402b86] (263,730,988 samples, 0.07%)</title><rect x="1161.6" y="133" width="0.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1164.58" y="143.5" ></text>
</g>
<g >
<title>libomp.so[+63b60] (68,428,866 samples, 0.02%)</title><rect x="1173.5" y="453" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1176.49" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad4762c8] (228,005,509 samples, 0.06%)</title><rect x="1159.5" y="213" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1162.51" y="223.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad46f52e] (534,907,042 samples, 0.14%)</title><rect x="1161.4" y="197" width="1.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1164.44" y="207.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad01e418] (424,521,556 samples, 0.11%)</title><rect x="1165.0" y="197" width="1.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1168.01" y="207.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad0120b2] (2,897,940,491 samples, 0.76%)</title><rect x="1179.6" y="421" width="8.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1182.60" y="431.5" ></text>
</g>
<g >
<title>je_pages_purge_forced (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="277" width="1.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1160.45" y="287.5" ></text>
</g>
<g >
<title>libomp.so[+63c08] (75,411,015 samples, 0.02%)</title><rect x="1188.9" y="453" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1191.95" y="463.5" ></text>
</g>
<g >
<title>memset (46,679,687 samples, 0.01%)</title><rect x="1156.7" y="389" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1159.66" y="399.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad49338a] (392,055,657 samples, 0.10%)</title><rect x="1157.5" y="85" width="1.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1160.45" y="95.5" ></text>
</g>
<g >
<title>libomp.so[+63c10] (123,871,397 samples, 0.03%)</title><rect x="1189.3" y="453" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1192.26" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad200bc2] (256,877,195 samples, 0.07%)</title><rect x="1110.6" y="357" width="0.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1113.62" y="367.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad0120b2] (577,139,526 samples, 0.15%)</title><rect x="1161.3" y="325" width="1.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1164.32" y="335.5" ></text>
</g>
<g >
<title>llama_mmap::~llama_mmap (396,528,117 samples, 0.10%)</title><rect x="1159.3" y="389" width="1.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1162.32" y="399.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad093dfa] (577,139,526 samples, 0.15%)</title><rect x="1161.3" y="277" width="1.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1164.32" y="287.5" ></text>
</g>
<g >
<title>ggml_visit_parents (37,879,196 samples, 0.01%)</title><rect x="1157.0" y="325" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1159.98" y="335.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae73667e] (1,053,890,922 samples, 0.28%)</title><rect x="1164.0" y="341" width="3.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1167.00" y="351.5" ></text>
</g>
<g >
<title>sched_yield (2,950,109,358 samples, 0.77%)</title><rect x="1179.4" y="437" width="9.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1182.44" y="447.5" ></text>
</g>
<g >
<title>ggml_backend_buffer_free (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="373" width="1.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1160.45" y="383.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad49da8a] (50,048,734 samples, 0.01%)</title><rect x="1160.3" y="197" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1163.34" y="207.5" ></text>
</g>
<g >
<title>libomp.so[+63a84] (198,663,628 samples, 0.05%)</title><rect x="1169.4" y="453" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1172.35" y="463.5" ></text>
</g>
<g >
<title>libomp.so[+63bbc] (273,131,292 samples, 0.07%)</title><rect x="1177.8" y="453" width="0.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1180.83" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae7365ea] (2,897,940,491 samples, 0.76%)</title><rect x="1179.6" y="389" width="8.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1182.60" y="399.5" ></text>
</g>
<g >
<title>libomp.so[+63b84] (71,565,447 samples, 0.02%)</title><rect x="1176.0" y="453" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1179.03" y="463.5" ></text>
</g>
<g >
<title>ggml_compute_forward_rope_f32 (578,580,418 samples, 0.15%)</title><rect x="1137.9" y="421" width="1.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1140.89" y="431.5" ></text>
</g>
<g >
<title>llm_build_context::build_llama (198,907,761 samples, 0.05%)</title><rect x="1156.8" y="389" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1159.81" y="399.5" ></text>
</g>
<g >
<title>llama_load_model_from_file (678,111,849 samples, 0.18%)</title><rect x="1161.1" y="405" width="2.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1164.13" y="415.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad4ad24e] (447,557,930 samples, 0.12%)</title><rect x="1165.0" y="213" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1167.98" y="223.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae7365ea] (577,139,526 samples, 0.15%)</title><rect x="1161.3" y="293" width="1.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1164.32" y="303.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae73655e] (4,231,715,420 samples, 1.11%)</title><rect x="1142.9" y="389" width="13.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1145.88" y="399.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebaea02598] (3,617,115,108 samples, 0.95%)</title><rect x="1144.6" y="293" width="11.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1147.55" y="303.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad01280a] (62,569,334 samples, 0.02%)</title><rect x="211.7" y="421" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="214.68" y="431.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad481b3a] (530,520,276 samples, 0.14%)</title><rect x="1161.5" y="165" width="1.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1164.45" y="175.5" ></text>
</g>
<g >
<title>all (382,166,700,930 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>llama_sampling_sample_impl (47,245,011 samples, 0.01%)</title><rect x="1167.3" y="421" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1170.26" y="431.5" ></text>
</g>
<g >
<title>je_large_dalloc (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="341" width="1.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1160.45" y="351.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae73655e] (396,528,117 samples, 0.10%)</title><rect x="1159.3" y="341" width="1.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1162.32" y="351.5" ></text>
</g>
<g >
<title>ggml_get_n_tasks (118,468,075 samples, 0.03%)</title><rect x="1142.2" y="421" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1145.23" y="431.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae73655e] (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="229" width="1.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1160.45" y="239.5" ></text>
</g>
<g >
<title>main (3,730,388,518 samples, 0.98%)</title><rect x="1156.0" y="437" width="11.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1158.96" y="447.5" ></text>
</g>
<g >
<title>llama_model_loader::init_mappings (577,139,526 samples, 0.15%)</title><rect x="1161.3" y="373" width="1.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1164.32" y="383.5" ></text>
</g>
<g >
<title>ggml_fp32_to_fp16_row (52,390,032 samples, 0.01%)</title><rect x="225.0" y="405" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="228.01" y="415.5" ></text>
</g>
<g >
<title>__powf_finite (45,106,970 samples, 0.01%)</title><rect x="1139.2" y="405" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1142.23" y="415.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad19056a] (3,692,419,369 samples, 0.97%)</title><rect x="1144.4" y="325" width="11.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1147.39" y="335.5" ></text>
</g>
<g >
<title>llama_mmap::llama_mmap (577,139,526 samples, 0.15%)</title><rect x="1161.3" y="357" width="1.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1164.32" y="367.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad01280a] (256,877,195 samples, 0.07%)</title><rect x="1110.6" y="389" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1113.62" y="399.5" ></text>
</g>
<g >
<title>llama_build_graph (199,334,527 samples, 0.05%)</title><rect x="1156.8" y="405" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1159.81" y="415.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad4acff6] (202,541,505 samples, 0.05%)</title><rect x="1164.3" y="213" width="0.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1167.34" y="223.5" ></text>
</g>
<g >
<title>@plt (38,526,866 samples, 0.01%)</title><rect x="239.1" y="405" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="242.14" y="415.5" ></text>
</g>
<g >
<title>ggml_compute_forward_mul_mat (294,888,491,944 samples, 77.16%)</title><rect x="226.9" y="421" width="910.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="229.86" y="431.5" >ggml_compute_forward_mul_mat</text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad2622c2] (61,530,169 samples, 0.02%)</title><rect x="1111.2" y="309" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1114.17" y="319.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad448f86] (577,139,526 samples, 0.15%)</title><rect x="1161.3" y="229" width="1.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1164.32" y="239.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad4acb82] (660,169,222 samples, 0.17%)</title><rect x="1164.3" y="229" width="2.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1167.33" y="239.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad0120b2] (4,231,715,420 samples, 1.11%)</title><rect x="1142.9" y="405" width="13.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1145.88" y="415.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebaea02b62] (2,549,744,383 samples, 0.67%)</title><rect x="1180.6" y="325" width="7.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1183.56" y="335.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad475cee] (606,591,849 samples, 0.16%)</title><rect x="1157.5" y="133" width="1.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1160.45" y="143.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad190540] (184,230,048 samples, 0.05%)</title><rect x="1143.8" y="325" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1146.77" y="335.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad472bea] (577,139,526 samples, 0.15%)</title><rect x="1161.3" y="213" width="1.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1164.32" y="223.5" ></text>
</g>
<g >
<title>gguf_kv_to_str (42,982,698 samples, 0.01%)</title><rect x="1161.2" y="373" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1164.16" y="383.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad40353c] (139,376,375 samples, 0.04%)</title><rect x="1162.5" y="117" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1165.47" y="127.5" ></text>
</g>
<g >
<title>ggml_visit_parents (45,262,617 samples, 0.01%)</title><rect x="1157.0" y="341" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1159.96" y="351.5" ></text>
</g>
<g >
<title>ggml_vec_dot_f16 (12,056,985,468 samples, 3.15%)</title><rect x="240.3" y="405" width="37.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="243.29" y="415.5" >ggm..</text>
</g>
<g >
<title>libomp.so[+63a58] (78,217,476 samples, 0.02%)</title><rect x="1167.8" y="453" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1170.78" y="463.5" ></text>
</g>
<g >
<title>memset (1,301,347,163 samples, 0.34%)</title><rect x="1163.2" y="389" width="4.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1166.24" y="399.5" ></text>
</g>
<g >
<title>libomp.so[+63ab0] (99,261,268 samples, 0.03%)</title><rect x="1171.7" y="453" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1174.75" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad4c2d42] (371,729,279 samples, 0.10%)</title><rect x="1157.5" y="69" width="1.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1160.51" y="79.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad422d06] (83,209,158 samples, 0.02%)</title><rect x="1166.8" y="213" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1169.83" y="223.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae7365ea] (396,528,117 samples, 0.10%)</title><rect x="1159.3" y="325" width="1.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1162.32" y="335.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad41d272] (279,587,579 samples, 0.07%)</title><rect x="1157.8" y="53" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1160.78" y="63.5" ></text>
</g>
<g >
<title>ggml_compute_forward_add (242,353,789 samples, 0.06%)</title><rect x="212.1" y="421" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="215.13" y="431.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad19045e] (2,662,845,960 samples, 0.70%)</title><rect x="1180.3" y="357" width="8.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1183.26" y="367.5" ></text>
</g>
<g >
<title>libomp.so[+63a60] (69,290,736 samples, 0.02%)</title><rect x="1168.0" y="453" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1171.03" y="463.5" ></text>
</g>
<g >
<title>libomp.so[+63b88] (73,101,808 samples, 0.02%)</title><rect x="1176.2" y="453" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1179.25" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad19045e] (3,911,337,526 samples, 1.02%)</title><rect x="1143.8" y="341" width="12.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1146.77" y="351.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad0120b2] (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="245" width="1.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1160.45" y="255.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad4bf086] (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="181" width="1.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1160.45" y="191.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad47639e] (64,043,879 samples, 0.02%)</title><rect x="1160.3" y="213" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1163.33" y="223.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad4b0600] (201,815,827 samples, 0.05%)</title><rect x="1164.3" y="197" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1167.35" y="207.5" ></text>
</g>
<g >
<title>libomp.so[+63bd4] (2,951,828,630 samples, 0.77%)</title><rect x="1179.4" y="453" width="9.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1182.44" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad093d78] (277,223,992 samples, 0.07%)</title><rect x="1142.9" y="357" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1145.88" y="367.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad479e76] (606,591,849 samples, 0.16%)</title><rect x="1157.5" y="149" width="1.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1160.45" y="159.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad41caa0] (68,513,961 samples, 0.02%)</title><rect x="1157.5" y="53" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1160.51" y="63.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad484456] (531,500,079 samples, 0.14%)</title><rect x="1161.5" y="181" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.45" y="191.5" ></text>
</g>
<g >
<title>llama_free_model (403,873,359 samples, 0.11%)</title><rect x="1159.3" y="421" width="1.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1162.32" y="431.5" ></text>
</g>
<g >
<title>libomp.so[+63bc0] (104,941,143 samples, 0.03%)</title><rect x="1178.7" y="453" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1181.67" y="463.5" ></text>
</g>
<g >
<title>ggml_vec_dot_q4_0_q8_0 (270,077,462,924 samples, 70.67%)</title><rect x="277.5" y="405" width="833.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="280.52" y="415.5" >ggml_vec_dot_q4_0_q8_0</text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae73659a] (1,184,053,965 samples, 0.31%)</title><rect x="1163.6" y="357" width="3.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1166.60" y="367.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad0120b2] (1,184,053,965 samples, 0.31%)</title><rect x="1163.6" y="373" width="3.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1166.60" y="383.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad4b4870] (253,470,437 samples, 0.07%)</title><rect x="1157.8" y="37" width="0.8" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1160.82" y="47.5" ></text>
</g>
<g >
<title>llama_kv_cache_clear (180,086,376 samples, 0.05%)</title><rect x="1160.6" y="405" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1163.57" y="415.5" ></text>
</g>
<g >
<title>llama_kv_cache::~llama_kv_cache (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="389" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.45" y="399.5" ></text>
</g>
<g >
<title>libomp.so[+63a88] (66,795,923 samples, 0.02%)</title><rect x="1170.0" y="453" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1172.97" y="463.5" ></text>
</g>
<g >
<title>llama_free (611,937,527 samples, 0.16%)</title><rect x="1157.4" y="421" width="1.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1160.43" y="431.5" ></text>
</g>
<g >
<title>sched_yield (34,898,741 samples, 0.01%)</title><rect x="1167.6" y="437" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1170.58" y="447.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad42347a] (86,103,611 samples, 0.02%)</title><rect x="1166.8" y="229" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1169.83" y="239.5" ></text>
</g>
<g >
<title>libomp.so[+63aac] (47,202,407 samples, 0.01%)</title><rect x="1171.6" y="453" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1174.60" y="463.5" ></text>
</g>
<g >
<title>llama-cli (382,166,700,930 samples, 100.00%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >llama-cli</text>
</g>
<g >
<title>ggml_vec_dot_q6_K_q8_K (8,012,986,349 samples, 2.10%)</title><rect x="1111.4" y="405" width="24.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1114.43" y="415.5" >g..</text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebaea02b62] (3,669,139,436 samples, 0.96%)</title><rect x="1144.4" y="309" width="11.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1147.43" y="319.5" ></text>
</g>
<g >
<title>ggml_build_forward_expand (45,262,617 samples, 0.01%)</title><rect x="1157.0" y="357" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1159.96" y="367.5" ></text>
</g>
<g >
<title>libomp.so[+63a94] (47,827,099 samples, 0.01%)</title><rect x="1170.4" y="453" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1173.36" y="463.5" ></text>
</g>
<g >
<title>libomp.so[+63ba0] (182,792,633 samples, 0.05%)</title><rect x="1177.3" y="453" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1180.26" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae73655e] (33,862,469 samples, 0.01%)</title><rect x="1167.6" y="405" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1170.58" y="415.5" ></text>
</g>
<g >
<title>__libc_init (3,731,856,233 samples, 0.98%)</title><rect x="1156.0" y="453" width="11.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1158.95" y="463.5" ></text>
</g>
<g >
<title>je_extent_dalloc_wrapper (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="293" width="1.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1160.45" y="303.5" ></text>
</g>
<g >
<title>libomp.so[+63a68] (65,260,014 samples, 0.02%)</title><rect x="1168.3" y="453" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1171.29" y="463.5" ></text>
</g>
<g >
<title>ggml_compute_forward_soft_max (337,440,796 samples, 0.09%)</title><rect x="1139.7" y="421" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1142.68" y="431.5" ></text>
</g>
<g >
<title>libomp.so[+63b74] (241,464,007 samples, 0.06%)</title><rect x="1174.8" y="453" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1177.80" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad093dfa] (396,528,117 samples, 0.10%)</title><rect x="1159.3" y="309" width="1.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1162.32" y="319.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad46f4f6] (38,349,963 samples, 0.01%)</title><rect x="1161.3" y="197" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1164.32" y="207.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad0a905a] (1,048,856,468 samples, 0.27%)</title><rect x="1164.0" y="325" width="3.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1167.01" y="335.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad47613e] (392,055,657 samples, 0.10%)</title><rect x="1157.5" y="117" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1160.45" y="127.5" ></text>
</g>
<g >
<title>ggml_hash_find_or_insert (62,878,269 samples, 0.02%)</title><rect x="1156.3" y="373" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1159.31" y="383.5" ></text>
</g>
<g >
<title>madvise (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="261" width="1.9" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1160.45" y="271.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad47639e] (53,496,935 samples, 0.01%)</title><rect x="1159.1" y="117" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1162.12" y="127.5" ></text>
</g>
<g >
<title>arena_decay_to_limit (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="309" width="1.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1160.45" y="319.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae73667c] (129,434,188 samples, 0.03%)</title><rect x="1163.6" y="341" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1166.60" y="351.5" ></text>
</g>
<g >
<title>mmap64 (577,139,526 samples, 0.15%)</title><rect x="1161.3" y="341" width="1.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1164.32" y="351.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad262510] (53,373,592 samples, 0.01%)</title><rect x="1111.2" y="293" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1114.19" y="303.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad41ed44] (73,074,824 samples, 0.02%)</title><rect x="1166.8" y="197" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1169.83" y="207.5" ></text>
</g>
<g >
<title>libomp.so[+63b78] (126,409,868 samples, 0.03%)</title><rect x="1175.5" y="453" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1178.55" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad48e99a] (577,139,526 samples, 0.15%)</title><rect x="1161.3" y="245" width="1.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1164.32" y="255.5" ></text>
</g>
<g >
<title>ggml_gallocr_alloc_graph (44,242,305 samples, 0.01%)</title><rect x="1156.5" y="389" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1159.50" y="399.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad48cc62] (395,792,423 samples, 0.10%)</title><rect x="1159.3" y="261" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1162.32" y="271.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad47fc84] (234,105,374 samples, 0.06%)</title><rect x="1161.6" y="117" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1164.59" y="127.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebaea11ffa] (984,689,308 samples, 0.26%)</title><rect x="1164.1" y="293" width="3.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1167.13" y="303.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae7365ea] (4,231,715,420 samples, 1.11%)</title><rect x="1142.9" y="373" width="13.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1145.88" y="383.5" ></text>
</g>
<g >
<title>libomp.so[+63a98] (136,241,743 samples, 0.04%)</title><rect x="1170.5" y="453" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1173.51" y="463.5" ></text>
</g>
<g >
<title>__kernel_gettimeofday (79,525,523 samples, 0.02%)</title><rect x="10.0" y="453" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="13.05" y="463.5" ></text>
</g>
<g >
<title>libomp.so[+63b8c] (76,711,880 samples, 0.02%)</title><rect x="1176.5" y="453" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1179.47" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad0100fc] (138,405,258 samples, 0.04%)</title><rect x="1110.6" y="325" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1113.62" y="335.5" ></text>
</g>
<g >
<title>llm_load_tensors (581,528,060 samples, 0.15%)</title><rect x="1161.3" y="389" width="1.8" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1164.31" y="399.5" ></text>
</g>
<g >
<title>llama_model_loader::llama_model_loader (54,229,137 samples, 0.01%)</title><rect x="1161.1" y="389" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1164.13" y="399.5" ></text>
</g>
<g >
<title>libomp.so[+63b54] (69,191,019 samples, 0.02%)</title><rect x="1172.9" y="453" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1175.92" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad475cee] (395,792,423 samples, 0.10%)</title><rect x="1159.3" y="229" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1162.32" y="239.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad093dfa] (3,920,517,811 samples, 1.03%)</title><rect x="1143.8" y="357" width="12.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1146.77" y="367.5" ></text>
</g>
<g >
<title>llama_decode (456,474,568 samples, 0.12%)</title><rect x="1156.0" y="421" width="1.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1159.02" y="431.5" ></text>
</g>
<g >
<title>ggml_compute_forward_rms_norm (160,310,386 samples, 0.04%)</title><rect x="1137.4" y="421" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1140.38" y="431.5" ></text>
</g>
<g >
<title>libomp.so[+63aa0] (80,865,528 samples, 0.02%)</title><rect x="1171.0" y="453" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1174.00" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad48e7e2] (396,528,117 samples, 0.10%)</title><rect x="1159.3" y="293" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1162.32" y="303.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad482738] (68,278,662 samples, 0.02%)</title><rect x="1166.5" y="245" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1169.54" y="255.5" ></text>
</g>
<g >
<title>__kmp_invoke_microtask (371,043,052,842 samples, 97.09%)</title><rect x="10.3" y="453" width="1145.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="13.30" y="463.5" >__kmp_invoke_microtask</text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad13b27a] (62,569,334 samples, 0.02%)</title><rect x="211.7" y="373" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="214.68" y="383.5" ></text>
</g>
<g >
<title>__memcpy_aarch64_simd (300,956,072 samples, 0.08%)</title><rect x="239.3" y="405" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="242.28" y="415.5" ></text>
</g>
<g >
<title>llm_build_kv (120,912,250 samples, 0.03%)</title><rect x="1157.0" y="373" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1159.95" y="383.5" ></text>
</g>
<g >
<title>libomp.so[+63c14] (83,759,947 samples, 0.02%)</title><rect x="1189.6" y="453" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.64" y="463.5" ></text>
</g>
<g >
<title>llama_model::~llama_model (403,873,359 samples, 0.11%)</title><rect x="1159.3" y="405" width="1.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1162.32" y="415.5" ></text>
</g>
<g >
<title>ggml_backend_sched_reset (46,679,687 samples, 0.01%)</title><rect x="1156.7" y="405" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1159.66" y="415.5" ></text>
</g>
<g >
<title>llama_init_from_gpt_params (2,165,980,291 samples, 0.57%)</title><rect x="1160.6" y="421" width="6.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1163.57" y="431.5" ></text>
</g>
<g >
<title>libomp.so[+63b98] (123,286,534 samples, 0.03%)</title><rect x="1176.9" y="453" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1179.88" y="463.5" ></text>
</g>
<g >
<title>libomp.so[+63a78] (149,193,157 samples, 0.04%)</title><rect x="1168.8" y="453" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1171.80" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad093dfa] (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="197" width="1.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1160.45" y="207.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae73655e] (577,139,526 samples, 0.15%)</title><rect x="1161.3" y="309" width="1.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1164.32" y="319.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad093dfa] (2,673,255,656 samples, 0.70%)</title><rect x="1180.3" y="373" width="8.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1183.26" y="383.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad13b27a] (256,877,195 samples, 0.07%)</title><rect x="1110.6" y="341" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1113.62" y="351.5" ></text>
</g>
<g >
<title>ggml_graph_compute_thread (371,042,457,079 samples, 97.09%)</title><rect x="10.3" y="437" width="1145.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="13.30" y="447.5" >ggml_graph_compute_thread</text>
</g>
<g >
<title>ggml_backend_sched_split_graph (142,413,711 samples, 0.04%)</title><rect x="1156.1" y="389" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1159.06" y="399.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad093d78] (207,750,617 samples, 0.05%)</title><rect x="1179.6" y="373" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1182.60" y="383.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad49314e] (392,055,657 samples, 0.10%)</title><rect x="1157.5" y="101" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1160.45" y="111.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebaea1260e] (62,569,334 samples, 0.02%)</title><rect x="211.7" y="405" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="214.68" y="415.5" ></text>
</g>
<g >
<title>munmap (396,528,117 samples, 0.10%)</title><rect x="1159.3" y="373" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1162.32" y="383.5" ></text>
</g>
<g >
<title>je_arena_extents_dirty_dalloc (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="325" width="1.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1160.45" y="335.5" ></text>
</g>
<g >
<title>ggml_backend_sched_alloc_graph (189,551,121 samples, 0.05%)</title><rect x="1156.1" y="405" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1159.05" y="415.5" ></text>
</g>
<g >
<title>quantize_row_q8_0 (386,152,164 samples, 0.10%)</title><rect x="1136.2" y="405" width="1.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1139.17" y="415.5" ></text>
</g>
<g >
<title>libomp.so[+63b28] (67,813,269 samples, 0.02%)</title><rect x="1172.7" y="453" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1175.71" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad010166] (116,763,309 samples, 0.03%)</title><rect x="1111.1" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1114.06" y="335.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad4bb372] (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="165" width="1.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1160.45" y="175.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad19056a] (2,568,761,578 samples, 0.67%)</title><rect x="1180.5" y="341" width="8.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1183.53" y="351.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebaea02598] (2,496,080,585 samples, 0.65%)</title><rect x="1180.7" y="309" width="7.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1183.71" y="319.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad190540] (76,315,941 samples, 0.02%)</title><rect x="1180.3" y="341" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1183.26" y="351.5" ></text>
</g>
<g >
<title>ggml_compute_forward (62,090,088 samples, 0.02%)</title><rect x="211.9" y="421" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="214.94" y="431.5" ></text>
</g>
<g >
<title>je_free (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="357" width="1.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1160.45" y="367.5" ></text>
</g>
<g >
<title>memset (180,086,376 samples, 0.05%)</title><rect x="1160.6" y="389" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1163.57" y="399.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad4762c8] (79,878,908 samples, 0.02%)</title><rect x="1158.7" y="117" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1161.72" y="127.5" ></text>
</g>
<g >
<title>llama_context::~llama_context (611,937,527 samples, 0.16%)</title><rect x="1157.4" y="405" width="1.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1160.43" y="415.5" ></text>
</g>
<g >
<title>libomp.so[+63b6c] (265,893,361 samples, 0.07%)</title><rect x="1174.0" y="453" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1176.98" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad482576] (673,901,818 samples, 0.18%)</title><rect x="1164.3" y="245" width="2.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1167.31" y="255.5" ></text>
</g>
<g >
<title>ggml_compute_forward_dup (3,981,020,934 samples, 1.04%)</title><rect x="212.9" y="421" width="12.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="215.88" y="431.5" ></text>
</g>
<g >
<title>llm_load_vocab (38,736,210 samples, 0.01%)</title><rect x="1163.1" y="389" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1166.11" y="399.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae7365ea] (607,299,534 samples, 0.16%)</title><rect x="1157.4" y="213" width="1.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1160.45" y="223.5" ></text>
</g>
<g >
<title>sched_yield (4,323,512,805 samples, 1.13%)</title><rect x="1142.6" y="421" width="13.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1145.60" y="431.5" ></text>
</g>
<g >
<title>libomp.so[+63b64] (82,208,798 samples, 0.02%)</title><rect x="1173.7" y="453" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1176.71" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad4827d6] (89,017,975 samples, 0.02%)</title><rect x="1166.8" y="245" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1169.82" y="255.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad481b5e] (923,570,335 samples, 0.24%)</title><rect x="1164.3" y="261" width="2.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1167.30" y="271.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad0120b2] (396,528,117 samples, 0.10%)</title><rect x="1159.3" y="357" width="1.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1162.32" y="367.5" ></text>
</g>
<g >
<title>ggml_compute_forward_unary (490,994,194 samples, 0.13%)</title><rect x="1140.7" y="421" width="1.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1143.72" y="431.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebae73655e] (2,897,940,491 samples, 0.76%)</title><rect x="1179.6" y="405" width="8.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1182.60" y="415.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad482e82] (528,574,878 samples, 0.14%)</title><rect x="1161.5" y="149" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1164.46" y="159.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad48c2d2] (396,528,117 samples, 0.10%)</title><rect x="1159.3" y="277" width="1.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1162.32" y="287.5" ></text>
</g>
<g >
<title>libomp.so[+63bc4] (40,095,861 samples, 0.01%)</title><rect x="1179.0" y="453" width="0.1" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="1182.00" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad402c42] (193,652,394 samples, 0.05%)</title><rect x="1162.5" y="133" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1165.47" y="143.5" ></text>
</g>
<g >
<title>llama_new_context_with_model (1,306,328,923 samples, 0.34%)</title><rect x="1163.2" y="405" width="4.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1166.22" y="415.5" ></text>
</g>
<g >
<title>libomp.so[+63bcc] (72,267,988 samples, 0.02%)</title><rect x="1179.1" y="453" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1182.13" y="463.5" ></text>
</g>
<g >
<title>[kernel.kallsyms][+ffffffebad476318] (41,183,199 samples, 0.01%)</title><rect x="1159.0" y="117" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1161.98" y="127.5" ></text>
</g>
</g>
</svg>
